Struct WinAPI_STORAGE_DESCRIPTOR_HEADER
    DWord iVersion
    DWord iSize
End_Struct

Struct WinAPI_STORAGE_PROPERTY_QUERY
    Integer  tPropertyId
    Integer  tQueryType
    UChar[4] ucaAdditionalParameters
End_Struct

Struct WinAPI_STORAGE_DEVICE_DESCRIPTOR
    DWord    iVersion 
    DWord    iSize
    UChar    ucDeviceType
    UChar    ucDeviceTypeModifier
    Boolean  bRemovableMedia
    Boolean  bCommandQueueing
    DWord    iVendorIdOffset
    DWord    iProductIdOffset
    DWord    iProductRevisionOffset
    DWord    iSerialNumberOffset
    Integer  iBusType
    DWord    iRawPropertiesLength
    UChar[1] ucRawDeviceProperties
End_Struct

Define WinAPI_StorageDeviceProperty        for 0
Define WinAPI_PropertyStandardQuery        for 0
Define WinAPI_IOCTL_STORAGE_QUERY_PROPERTY for 2954240
Define WinAPI_FILE_SHARE_READ              for 1
Define WinAPI_FILE_SHARE_WRITE             for 2
Define WinAPI_OPEN_EXISTING                for 3
Define WinAPI_INVALID_HANDLE_VALUE         for -1

External_Function WinAPI_CreateFile "CreateFileA" kernel32.dll ;
    Pointer pFileName ;
    DWord   dwDesiredAccess ;
    DWord   dwShareMode ;
    Pointer lpSecurityAttributes ;
    DWord   dwCreationDisposition ;
    DWord   dwFlagsAndAttributes ;
    Handle  hTemplateFile ;
    Returns Handle

// Picked up from DataAcceess Newsgroups - courtesy of Anders Ohrt
External_Function WinAPI_CloseHandle "CloseHandle" kernel32.dll ;
    Handle hObject ;
    Returns Boolean

External_Function WinAPI_DeviceIoControl "DeviceIoControl" kernel32.dll ;
    Handle  hDevice ;        // [in]                Handle       hDevice,
    DWord   iIoControlCode ; // [in]                DWord        dwIoControlCode,
    Pointer pInBuffer ;      // [in, optional]      LPVOID       lpInBuffer,
    DWord   nInBufferSize ;  // [in]                DWord        nInBufferSize,
    Pointer pOutBuffer ;     // [out, optional]     LPVOID       lpOutBuffer,
    DWord   nOutBufferSize ; // [in]                DWord        nOutBufferSize,
    Pointer pBytesReturned ; // [out, optional]     LPDWORD      lpBytesReturned,
    Pointer pOverlapped ;    // [in, out, optional] LPOVERLAPPED lpOverlapped
    Returns Boolean

Function DeviceSerialNumber Global Integer iDevice Returns String
    WinAPI_STORAGE_DESCRIPTOR_HEADER tDescriptorHeader
    WinAPI_STORAGE_DEVICE_DESCRIPTOR tDeviceDescriptor
    Integer iBytesReturned iBufferSize iIndex iChar
    WinAPI_STORAGE_PROPERTY_QUERY tPropertyQuery
    String sDrivePath sBuffer sSerial
    Handle hDevice
    Boolean bOk

    Move (SFormat("\\.\PhysicalDrive%1", iDevice)) to sDrivePath
    Move (WinAPI_CreateFile(AddressOf(sDrivePath), 0, WinAPI_FILE_SHARE_READ ior WinAPI_FILE_SHARE_WRITE, 0, WinAPI_OPEN_EXISTING, 0, 0)) to hDevice
    If (hDevice = WinAPI_INVALID_HANDLE_VALUE) Begin
        Function_Return ""
    End

    Move WinAPI_StorageDeviceProperty to tPropertyQuery.tPropertyId
    Move WinAPI_PropertyStandardQuery to tPropertyQuery.tQueryType
    Move 0 to iBytesReturned

    Move (WinAPI_DeviceIoControl(hDevice, WinAPI_IOCTL_STORAGE_QUERY_PROPERTY, ;
                                 AddressOf(tPropertyQuery), SizeOfType(WinAPI_STORAGE_PROPERTY_QUERY), ;
                                 AddressOf(tDescriptorHeader), SizeOfType(WinAPI_STORAGE_DESCRIPTOR_HEADER), ;
                                 AddressOf(iBytesReturned), 0)) to bOk
    If (not(bOk)) Begin
        Function_Return ""
    End
    Move tDescriptorHeader.iSize to iBufferSize
    ZeroString iBufferSize to sBuffer

    Move (WinAPI_DeviceIoControl(hDevice, WinAPI_IOCTL_STORAGE_QUERY_PROPERTY, ;
                                 AddressOf(tPropertyQuery), SizeOfType(WinAPI_STORAGE_PROPERTY_QUERY), ;
                                 AddressOf(sBuffer), iBufferSize, ;
                                 AddressOf(iBytesReturned), 0)) to bOk
    If (not(bOk)) Begin
        Move (WinAPI_CloseHandle(hDevice)) to bOk
        Function_Return ""
    End

    Move (MemCopy(AddressOf(tDeviceDescriptor), AddressOf(sBuffer), SizeOfType(WinAPI_STORAGE_DEVICE_DESCRIPTOR))) to bOk
    If (tDeviceDescriptor.iSerialNumberOffset = 0) Begin
        Move (WinAPI_CloseHandle(hDevice)) to bOk
        Function_Return ""
    End

    Move "" to sSerial
    Move 0 to iIndex
    Move (DeRefC(AddressOf(sBuffer), tDeviceDescriptor.iSerialNumberOffset + iIndex)) to iChar
    While (iChar <> 0)
        Move (sSerial + Character(iChar)) to sSerial
        Increment iIndex
        Move (DeRefC(AddressOf(sBuffer), tDeviceDescriptor.iSerialNumberOffset + iIndex)) to iChar
    Loop

    Move (WinAPI_CloseHandle(hDevice)) to bOk
    Function_Return sSerial
End_Function 
