Use Windows.pkg
Use cRichEdit.pkg
Use cRDCButtonDPI.pkg
Use cRDCModalPanel.pkg
Use seq_chnl.pkg
Use vwin32fh.pkg

Object oErrorLogDialog_dg is a cRDCModalPanel
    Set Size to 214 624
    Set Label to "Error File Dialog"
    Set piMinSize to 89 211
    Set Location to 2 2
    Set Icon to "OpenLogFile.ico"

    Property String psErrorLog ""
    Property Integer piIndent

    Object oErrorLog_edt is a cRichEdit
        Set Size to 169 602
        Set Location to 16 11
        Set TextColor to clBlack
        Set peAnchors to anAll
        Set Label_Row_Offset to 3
        Set Label_TextColor to clGreenGreyLight
        Set TextColor to clGreenGreyLight 
        Set Label_FontItalics to True
        Set piFontSize to 200
        Set psTypeFace to 'Consolas'

        Delegate Set piIndent to (piParagraphIndent(Self))

        Procedure DoSaveDocument
            String sErrorLog
            Boolean bOk bOkToSave bChanged

            Move False to bOkToSave
            Get pbCanUndo to bChanged
            If (bChanged = False) Begin
                Procedure_Return
            End

            Get psErrorLog to sErrorLog
            Send Write sErrorLog
            // clear undo buffer on save
            // we want undo buffer to only apply to the new document
            Send ClearUndoBuffer
            Send Info_Box "Changes saved."
        End_Procedure

        Procedure LoadData
            String sErrorLog
            Integer iTwips iIndent

            Get psErrorLog to sErrorLog
            Set Label to sErrorLog
            Move 1440 to iTwips
            Get piIndent to iIndent
            Set piParagraphIndent to (iIndent + (iTwips * 0.2))

            Send Read sErrorLog
        End_Procedure
        
        Procedure DisplayCurrentSourceLine
            Integer iLine iPos iSize
            String sLine sSearch           
            Boolean bFound    
            Handle ho
            
            Get phoEditorRefactored of ghoApplication to ho
            Get Line_Count of ho to iSize
            If (iSize <= 1) Begin
                Procedure_Return
            End
            
            Move -1 to iLine    
            Move " ON LINE: " to sSearch
            Get LineFromChar iLine to iLine
            Get Line iLine to sLine     
            Move (Pos(sSearch, sLine)) to iPos
            If (iPos <> 0) Begin
                Move (Mid(sLine, Length(sLine), (iPos + Length(sSearch)))) to sLine
                Move (Pos(" ", sLine)) to iPos
                Move (Left(sLine, (iPos - 1))) to sLine
                Move (Trim(sLine)) to iLine 
                Decrement iLine
                Move True to bFound
            End
            
            If (bFound = True) Begin         
                Send Close_Panel
                Send JumpToSourceLine of (Client_Id(phoMainPanel(ghoApplication))) iLine    
                Send Activate of ho
            End
        End_Procedure   
        
        Procedure Mouse_Click
            Send DisplayCurrentSourceLine
        End_Procedure

        On_Key Key_Ctrl+Key_S Send DoSaveDocument
        On_Key kCancel Send Cancel  
        On_Key kEnter  Send DisplayCurrentSourceLine
    End_Object

    Object oCancel_Btn is a cRDCButtonDPI
        Set Label    to "&Close"
        Set Location to 193 563
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send Close_Panel
        End_Procedure

    End_Object


    Object oFirstRun_btn is a cRDCButtonDPI
        Set Location to 193 449
        Set Label to "View Top"
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send Beginning_of_Data to oErrorLog_edt
        End_Procedure

    End_Object

    Object oLatestRun_btn is a cRDCButtonDPI
        Set Location to 193 506
        Set Label to "View Bottom"
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send End_of_Data to oErrorLog_edt
        End_Procedure

    End_Object

    // Automatically load data into the grid when activating.
    Procedure Activating
        Handle ho
        Move (oErrorLog_edt(Self)) to ho
        Send LoadData    of ho
        // We need to active before we can send end_of_data.
        Send Activate    of ho
        Send End_of_Data to ho
    End_Procedure

    On_Key Key_Alt+Key_F  Send KeyAction of oFirstRun_btn
    On_Key Key_Ctrl+Key_F Send KeyAction of oFirstRun_btn
    On_Key Key_Alt+Key_L  Send KeyAction of oLatestRun_btn
    On_Key Key_Ctrl+Key_L Send KeyAction of oLatestRun_btn
    On_Key Key_Alt+Key_C  Send KeyAction of oCancel_Btn
End_Object

// Public access method for this dialog.
// Pass a file name including path to display.
Procedure ActivateErrorDialog String sErrorLog
    Handle ho
    Boolean bExists

    Get vFilePathExists sErrorLog to bExists
    If (bExists = False) Begin
        Send Info_Box "The ErrorLog doesn't exist."
        Procedure_Return
    End
    Move (oErrorLogDialog_dg(Self)) to ho
    Set psErrorLog of ho to sErrorLog
    Send Popup of ho
End_Procedure
