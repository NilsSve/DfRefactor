Use Windows.pkg
Use cTextEdit.pkg
Use seq_chnl.pkg
Use cRDCButtonDPI.pkg
Use cRDCModalPanel.pkg
Use vWin32fh.pkg

Object oEngineLogFile_dg is a cRDCModalPanel
    Set Size to 269 624
    Set Label to "Refactor Engine Logfile"
    Set piMinSize to 89 211
    Set Location to 2 2
    Set Icon to "OpenLogFile.ico"

    Property String psLogFileName ""

    // Don't use cRichEdit as we want to save the output
    // as a .txt file.
    Object oEngineLogFile_edt is a cTextEdit
        Set Size to 224 603
        Set Location to 16 11
        Set TextColor to clBlack
        Set peAnchors to anAll
        Set Label_Row_Offset to 3
        Set Label_FontItalics to True
        Set piFontSize to 200
        Set psTypeFace to 'Consolas'
        Set Color to clEditorBackGround
        Set Label_TextColor to clStatusBarColor
        Set TextColor to clAlternateRowBgColor

        Procedure DoSaveDocument
            Boolean bChanged

            Get pbCanUndo to bChanged
            If (bChanged = False) Begin
                Procedure_Return
            End

            // clear undo buffer on save
            // we want undo buffer to only apply to the new document
            Send ClearUndoBuffer
            Send Info_Box "Changes saved."
        End_Procedure

        Procedure WriteData
            String sLogFileName
            Get psLogFileName to sLogFileName
            Send Write sLogFileName
        End_Procedure
            
        Procedure LoadData
            String sLogFileName
            Integer iError

            Get psLogFileName to sLogFileName
            Set Label to sLogFileName  
            Send Read sLogFileName
            Get LastErrorCode to iError
            If (iError = ERR_RE_Cannot_Open_File) Begin
                Send Info_Box ("Could not read the logfile:" * String(sLogFileName))
            End
        End_Procedure
        
        // Sets the current line to iLine and highlights it
        Procedure SelectRow Integer iLine
            Integer iPos iLen
            Get FirstCharInLinePos iLine to iPos
            Get LineLength iLine to iLen
            Send SetSel iPos (iPos + iLen)
        End_Procedure
        
        // Get the current selected Line
        Function SelectedRow Returns Integer
            Integer iLine
            Get LineFromChar -1 to iLine
            Function_Return iLine
        End_Function
        
        // Select the current row
        Procedure Mouse_Up Handle hCell Integer iPos  
            Integer iLine
            Get SelectedRow to iLine
            Send SelectRow iLine
        End_Procedure
   
        Procedure Down_Row
            Integer iLine
            Get SelectedRow to iLine
            Increment iLine
            Send SelectRow iLine
        End_Procedure
        
        Procedure Up_Row
            Integer iLine
            Get SelectedRow to iLine
            Decrement iLine
            Send SelectRow iLine
        End_Procedure
        
        Procedure Page Integer iPageObject
            Forward Send Page iPageObject
        End_Procedure

        Procedure DisplayCurrentSourceLine
        End_Procedure   
        
        Procedure Mouse_Click
        End_Procedure

        On_Key Key_Ctrl+Key_S Send DoSaveDocument
        On_Key kCancel Send Cancel  
        On_Key kEnter  Send DisplayCurrentSourceLine
        On_Key Key_Ctrl+Key_A Send Select_All
    End_Object

    Object oCancel_Btn is a cRDCButtonDPI
        Set Label    to "&Close"
        Set Location to 248 564
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send Close_Panel
        End_Procedure

    End_Object

    Object oFirstRun_btn is a cRDCButtonDPI
        Set Size to 14 66
        Set Location to 248 420
        Set Label to "View Top"
        Set peAnchors to anBottomRight
        Set psImage to "ViewFirst.ico"

        Procedure OnClick
            Send Beginning_of_Data to oEngineLogFile_edt
        End_Procedure

        Function IsEnabled Returns Boolean
            Integer iLines
            Get Line_Count of oEngineLogFile_edt to iLines
            Function_Return (iLines <> 1)
        End_Function

    End_Object

    Object oLatestRun_btn is a cRDCButtonDPI
        Set Size to 14 66
        Set Location to 248 489
        Set Label to "View Bottom"
        Set peAnchors to anBottomRight
        Set psImage to "ViewLast.ico"

        Procedure OnClick
            Send End_of_Data to oEngineLogFile_edt
        End_Procedure

        Function IsEnabled Returns Boolean
            Integer iLines
            Get Line_Count of oEngineLogFile_edt to iLines
            Function_Return (iLines <> 1)
        End_Function

    End_Object

    Object oClearLog_btn is a cRDCButtonDPI
        Set Size to 14 66
        Set Location to 248 351
        Set Label to "Clear Log" 
        Set psToolTip to "This will delete all content of the log file."
        Set psImage to "ActionDelete.ico"
        Set peAnchors to anBottomRight
    
        Procedure OnClick
            Handle ho
            Integer iRetval
            Get YesNo_Box "Are you sure you want to delete all content of this log file?" to iRetval
            If (iRetval <> MBR_Yes) Begin
                Procedure_Return
            End
            Move (oEngineLogFile_edt(Self)) to ho
            Send Delete_Data of ho
            Set Changed_State of ho to True
            Send WriteData of ho    
        End_Procedure
    
        Function IsEnabled Returns Boolean
            Integer iLines
            Get Line_Count of oEngineLogFile_edt to iLines
            Function_Return (iLines <> 1)
        End_Function

    End_Object

    // Automatically load data into the grid when activating.
    Procedure Activating
        Handle ho  
        String sLogFileName
        
        Forward Send Activating
        Move (oEngineLogFile_edt(Self)) to ho
        Send LoadData    of ho
        // We need to active before we can send end_of_data.
        Send Activate    of ho
        Send End_of_Data to ho
        Send Up_Row of ho
        //Send Up_Row of ho
        Get psLogFileName to sLogFileName
        Set StatusText of (Statusbar_Id(Self)) to sLogFileName
    End_Procedure

    On_Key Key_Alt+Key_F  Send KeyAction of oFirstRun_btn
    On_Key Key_Alt+Key_L  Send KeyAction of oLatestRun_btn
    On_Key Key_Alt+Key_C  Send KeyAction of oCancel_Btn
    On_Key Key_Ctrl+Key_S Send DoSaveDocument of oEngineLogFile_edt
End_Object

// Public access method:
Procedure ActivateEngineLogFile String sLogFile
    Handle ho
    Boolean bExists

    Get vFilePathExists sLogFile to bExists
    If (bExists = False) Begin
        Send Info_Box "The logfile doesn't exist."
        Procedure_Return
    End
    Move (oEngineLogFile_dg(Self)) to ho
    Set psLogFileName of ho to sLogFile
    Send Popup of ho
End_Procedure
