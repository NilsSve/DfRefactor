Use cApplication.pkg
Define CS_CompileTimeHeaderFile for "CompileHeader.h"
// Note: This is also defined in file: cDbUpdateHandler.inc
//       So don't change the name here!
Define CS_FilelistBackupFile    for "FilelistBackupFile.cfg"

// This program will do two things:
// 1. Create a date stamp file (CompileHeader.h) in the Data folder
//    It is read by the About object to show the program's compiled date & time.
// 2. Creates a backup copy of the Data\Filelist.cfg file -> "FilelistBackupFile.cfg"
//    The backup file is used by DUF's logic to automatically embedd both 
//    Filelist.cfg and all *.int files to the program and a DUF table named "IntFilesTable"
//    This is only used if the pbCheckIntFiles = True in the cDbUpdateHandler object.
//    The CheckIntFilesIntegrity message is doing all the work for this to function properly.
Object oApplication is a cApplication

    Procedure CreateCompileHeaderFile
        DateTime dtCurrentDateTime
        String sPath
        
        Move (psAppSrcPath(phoWorkspace(Self))) to sPath
        If (Right(sPath, 1) <> "\") Begin
            Move (sPath +"\") to sPath
        End
        Move (CurrentDateTime()) to dtCurrentDateTime
        
        Direct_Output (sPath + CS_CompileTimeHeaderFile)
            Writeln ("Define C$_CompileDateTime for" * '"' + String(dtCurrentDateTime) + '"')
       Close_Output

    End_Procedure  
    
    Procedure CreateFilelistBackupFile
        String sFileList sDataPath
        Boolean bExists bOK
        
        Get psDataPath of (phoWorkspace(ghoApplication)) to sDataPath
        File_Exist (sDataPath + "\" + CS_FilelistBackupFile) bExists
        // In case it exists, we delete it first to ensure we always have a current
        // version of the Filelist.cfg as a backup copy.
        If (bExists = True) Begin
            Get LocalDeleteFile (sDataPath + "\" + CS_FilelistBackupFile) to bOK
            If (bOK = False) Begin
                // Should we notify here?
            End
        End

        Get psFileList of (phoWorkspace(ghoApplication)) to sFileList
        CopyFile sFileList to (sDataPath + "\" + CS_FilelistBackupFile)
        File_Exist (sDataPath + "\" + CS_FilelistBackupFile) bExists
        If (bExists = False) Begin
            Send Info_Box ("The Filelist.cfg file:" * String(sFileList) + "\nCould not be copied to:" * CS_FilelistBackupFile + "\n\nYou may want to check on why this failed")
        End
        
    End_Procedure

    // This function returns whether the deletion was successful, thus:
    // return False (did not delete) if file still exists and True (did delete) if it does not
    Function LocalDeleteFile String sFile Returns Boolean
        Boolean bExist
        EraseFile sFile
        File_Exist sFile bExist
        Function_Return (not(bExist))
    End_Function

    Procedure OnWorkspaceOpened
        Send CreateCompileHeaderFile 
        Send CreateFilelistBackupFile
    End_Procedure
    
End_Object
