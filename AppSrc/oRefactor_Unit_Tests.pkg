//Use cTestFixture.pkg
Use cRefactorFunctionLibrary.pkg

Object cRefactorFunctionLibrary_Tests is a cTestFixture
    Set psFunctionName to "Main Test Fixture Object"

    Procedure Setup
        Object oRefactorFunctionLibrary is a cRefactorFunctionLibrary
        End_Object
    End_Procedure

    Procedure TearDown
        Send Destroy to oRefactorFunctionLibrary
    End_Procedure
    // *** cTestFixture obejcts below: ***
    //

    Object oChangeCurrent_ObjectToSelf is a cTestFixture
        Set psFunctionName to "ChangeCurrent_ObjectToSelf"

        {Published=False}
        Procedure ChangeCurrent_ObjectToSelf_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeCurrent_ObjectToSelf ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeDfTrueDfFalse is a cTestFixture
        Set psFunctionName to "ChangeDfTrueDfFalse"

        {Published=True}
        Procedure ChangeDfTrueDfFalse_DFTrue
            String sLine sExpected
            Boolean bChanged
            Move 'DFTrue' to sLine
            Move 'True' to sExpected
            Get ChangeDfTrueDfFalse of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        Procedure ChangeDfTrueDfFalse_DFFalse
            String sLine sExpected
            Boolean bChanged
            Move 'DFFalse' to sLine
            Move 'False' to sExpected
            Get ChangeDfTrueDfFalse of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeFoundAndFindErrIndicators is a cTestFixture
        Set psFunctionName to "ChangeFoundAndFindErrIndicators"

        {Published=False}
        Procedure ChangeFoundAndFindErrIndicators_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeFoundAndFindErrIndicators ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeFoundLoopIndicator is a cTestFixture
        Set psFunctionName to "ChangeFoundLoopIndicator"

        {Published=False}
        Procedure ChangeFoundLoopIndicator_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeFoundLoopIndicator ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeGetAddress_Fixture is a cTestFixture
        Set psFunctionName to "ChangeGetAddress"

        {Published=True}
        Procedure GetAddress_Default_Test
            String sLine sExpected
            Boolean bChanged
            Move "    GetAddress of sString to pString" to sLine
            Move "    Move (AddressOf(sString)) to pString" to sExpected
            Get ChangeGetAddress of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure Do_not_Change_function_test
            String sLine sExpected
            Boolean bChanged
            Move " Function GetAddress Returns String" to sLine
            Move " Function GetAddress Returns String" to sExpected
            Get ChangeGetAddress of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure Do_not_Change_function_invocation_Test
            String sLine sExpected
            Boolean bChanged
            Move " Entry_Item (GetAddress(oCustomer_DD))" to sLine
            Move " Entry_Item (GetAddress(oCustomer_DD))" to sExpected
            Get ChangeGetAddress of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure Do_not_Change_Address_In_A_Comment_Test
            String sLine sExpected
            Boolean bChanged
            Move "String structBytesRead      //Actual bytes read - Should be integer but getAddress cannot find " to sLine
            Move "String structBytesRead      //Actual bytes read - Should be integer but getAddress cannot find " to sExpected
            Get ChangeGetAddress of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeIndicateFoundToMoveTrueToFound is a cTestFixture
        Set psFunctionName to "ChangeIndicateFoundToMoveTrueToFound"

        {Published=False}
        Procedure ChangeIndicateFoundToMoveTrueToFound_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeIndicateFoundToMoveTrueToFound ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeIndicatorRepeatToWhile is a cTestFixture
        Set psFunctionName to "ChangeIndicatorRepeatToWhile"

        {Published=False}
        Procedure ChangeIndicatorRepeatToWhile_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeIndicatorRepeatToWhile ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeIndicatorToIfBegin is a cTestFixture
        Set psFunctionName to "ChangeIndicatorToIfBegin"

        {Published=True}
        Procedure Change_Indicator_to_If_Begin
            String sLine sExpected
            Boolean bChanged
            Move "  [not Seqeof] Begin // Comment" to sLine
            Move "  If (Seqeof = False) Begin // Comment" to sExpected
            Get ChangeIndicatorToIfBegin of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeIndicatorToMoveStateToVariable is a cTestFixture
        Set psFunctionName to "ChangeIndicatorToMoveStateToVariable"

        {Published=True}
        Procedure Change_Indicate_As_With_Expression
            String sLine sExpected
            Boolean bChanged
            Move "    [Select] Indicate Select as Windowindex Eq Fieldindex // Comment" to sLine
            Move "    If (Select) Move Windowindex Eq Fieldindex to Select // Comment" to sExpected
            Get ChangeIndicatorToMoveStateToVariable of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure Change_Indicate_As_No_Expression
            String sLine sExpected
            Boolean bChanged
            Move "    Indicate Select as Windowindex Eq Fieldindex // Comment" to sLine
            Move "    Move (Windowindex = Fieldindex) to Select // Comment" to sExpected
            Get ChangeIndicatorToMoveStateToVariable of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeInsertCommandToFunction is a cTestFixture
        Set psFunctionName to "ChangeInsertCommandToFunction"

        {Published=False}
        Procedure ChangeInsertCommandToFunction_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeInsertCommandToFunction ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeInToContains_Fixture is a cTestFixture
        Set psFunctionName to "ChangeInToContains"

        {Published=True}
        Procedure IndicateIn_Test
            String sLine sExpected
            Boolean bChanged
            Move '    indicate Select as sSubString in sHostString // Comment' to sLine
            Move '    indicate Select as (sHostString contains sSubString) // Comment' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure IfIn_Test
            String sLine sExpected
            Boolean bChanged
            Move '    if sSubString in sHostString RunProgram' to sLine
            Move '    if (sHostString contains sSubString) RunProgram' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure UntilIn_Test
            String sLine sExpected
            Boolean bChanged
            Move 'Until sSubString in sHostString' to sLine
            Move 'Until (sHostString contains sSubString)' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure WhileIn_Test
            String sLine sExpected
            Boolean bChanged
            Move 'While sSubString in sHostString' to sLine
            Move 'While (sHostString contains sSubString)' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        // This test will fail because the logic assumes the source line to be of proper syntax,
        // e.g. it needs to start with a command (or indicator + command).
        {Published=False}
        Procedure SpacesAroundIn_Test
            String sLine sExpected
            Boolean bChanged
            Move '     sSubString    in     sHostString    ' to sLine
            Move '     (sHostString contains sSubString)    ' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure ConstantStringIn_Test
            String sLine sExpected
            Boolean bChanged
            Move 'if "." in a_number' to sLine
            Move 'if (a_number contains ".")' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure ConstantStringIn2_Test
            String sLine sExpected
            Boolean bChanged
            Move 'if "." in "12.12"' to sLine
            Move 'if ("12.12" contains ".")' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure SingleQuoteInConstantString_Test
            String sLine sExpected
            Boolean bChanged
            Move (Replaces('`', 'if "`" in "I`m okay"', "'")) to sLine
            Move (Replaces('`', 'if ("I`m okay" contains "`")', "'")) to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure DoubleQuoteInConstantString_Test
            String sLine sExpected
            Boolean bChanged
            Move (Replaces('`', 'if "`" in "I`m okay"', "'")) to sLine
            Move (Replaces('`', 'if ("I`m okay" contains "`")', "'")) to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure CrLfInConstantString_Test
            String sLine sExpected
            Boolean bChanged
            Move "If (Character(10)) in sValue RunProgram" to sLine
            Move "If (sValue contains (Character(10))) RunProgram" to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure CrLfInAndSet_Test
            String sLine sExpected
            Boolean bChanged
            Move 'If "Support Classes" in sShow Set pbDontShowMNS of (VDFCLS_DD(Self)) to True' to sLine
            Move 'If (sShow contains "Support Classes") Set pbDontShowMNS of (VDFCLS_DD(Self)) to True' to sExpected
            Get ChangeInToContains of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeLegacyOperators is a cTestFixture
        Set psFunctionName to "ChangeLegacyOperators"

        {Published=True}
        Procedure While_Found_Expression
            String sLine sExpected
            Boolean bChanged
            Move "    While ((Found) and (iA Eq iB))" to sLine
            Move "    While ((Found) and (iA = iB))" to sExpected
            Get ChangeLegacyOperators of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure While_Legacy_Expression
            String sLine sExpected
            Boolean bChanged
            Move "    While L lt 13" to sLine
            Move "    While (L < 13)" to sExpected
            Get ChangeLegacyOperators of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeLegacyShadow_State is a cTestFixture
        Set psFunctionName to "ChangeLegacyShadow_State"

        {Published=True}
        Procedure ChangeLegacyShadow_State_BaseTest
            String sLine sExpected
            Boolean bChanged
            Move '  Set Shadow_State of (oApplication(Self)) to False // Comment here' to sLine
            Move '  Set Enabled_State of (oApplication(Self)) to True // Comment here' to sExpected
            Get ChangeLegacyShadow_State of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure ChangeLegacyShadow_State_GetTest
            String sLine sExpected
            Boolean bChanged
            Move '  Get Shadow_State to bState // Other comment' to sLine
            Move '  Get Enabled_State to (Not(bState)) // Other comment' to sExpected
            Get ChangeLegacyShadow_State of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure ChangeLegacyShadow_State_SetFalse
            String sLine sExpected
            Boolean bChanged
            Move '  Set Shadow_State of oButton to (not(bState))' to sLine
            Move '  Set Enabled_State of oButton to bState' to sExpected
            Get ChangeLegacyShadow_State of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure ChangeLegacy_Object_Shadow_State
            String sLine sExpected
            Boolean bChanged
            Move '  Set Object_Shadow_state to True' to sLine
            Move '  Set Enabled_State to False' to sExpected
            Get ChangeLegacyShadow_State of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeLengthCommandToFunction is a cTestFixture
        Set psFunctionName to "ChangeLengthCommandToFunction"

        {Published=False}
        Procedure ChangeLengthCommandToFunction_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeLengthCommandToFunction ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangePosCommandToFunction is a cTestFixture
        Set psFunctionName to "ChangePosCommandToFunction"

        {Published=False}
        Procedure ChangePosCommandToFunction_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangePosCommandToFunction ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeReplaceCommandToFunction is a cTestFixture
        Set psFunctionName to "ChangeReplaceCommandToFunction"

        {Published=True}
        Procedure Change_Replace_Command_To_Function
            String sLine sExpected
            Boolean bChanged
            Move '  Replace  "A"  In  sNameX  With "B" // End comment' to sLine
            Move '  Move (Replace("A", sNameX, "B")) to sNameX // End comment' to sExpected
            Get ChangeReplaceCommandToFunction of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeSysdate4 is a cTestFixture
        Set psFunctionName to "ChangeSysdate4"

        {Published=False}
        Procedure ChangeSysdate4_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeSysdate4 ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeTrimCommandToFunction is a cTestFixture
        Set psFunctionName to "ChangeTrimCommandToFunction"

        {Published=True}
        Procedure Default_Test
            String sLine sExpected
            Boolean bChanged
            Move " Trim sTmp to sValue" to sLine
            Move " Move (Trim(sTmp)) to sValue" to sExpected
            Get ChangeTrimCommandToFunction of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure Do_not_change_Comment_trim
            String sLine sExpected
            Boolean bChanged
            Move " Move sTmp to sValue // That's mighty trim of you" to sLine
            Move " Move sTmp to sValue // That's mighty trim of you" to sExpected
            Get ChangeTrimCommandToFunction of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeUClassToRefClass_Fixture is a cTestFixture
        Set psFunctionName to "ChangeUClassToRefClass"

        {Published=True}
        Procedure SimpleTest
            String sLine sExpected
            Boolean bChanged
            Move "    Get Create U_Array to hArray" to sLine
            Move "    Get Create (RefClass(Array)) to hArray" to sExpected
            Get ChangeUClassToRefClass of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure ManySpaces
            String sLine sExpected
            Boolean bChanged
            Move "    Get    Create   U_Array    to     hArray" to sLine
            Move "    Get    Create   (RefClass(Array))    to     hArray" to sExpected
            Get ChangeUClassToRefClass of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeUntilAndWhileIndicators is a cTestFixture
        Set psFunctionName to "ChangeUntilAndWhileIndicators"

        {Published=False}
        Procedure ChangeUntilAndWhileIndicators_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeUntilAndWhileIndicators ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oChangeZeroStringCommandToFunction is a cTestFixture
        Set psFunctionName to "ChangeZeroStringCommandToFunction"

        {Published=False}
        Procedure ChangeZeroStringCommandToFunction_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ChangeZeroStringCommandToFunction ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oEditorDropSelf is a cTestFixture
        Set psFunctionName to "EditorDropSelf"

        {Published=False}
        Procedure EditorDropSelf_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get EditorDropSelf ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oEditorNormalizeCase is a cTestFixture
        Set psFunctionName to "EditorNormalizeCase"

        {Published=False}
        Procedure EditorNormalizeCase_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get EditorNormalizeCase ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oEditorReIndent is a cTestFixture
        Set psFunctionName to "EditorReIndent"

        {Published=False}
        Procedure EditorReIndent_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get EditorReIndent ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveEndComments is a cTestFixture
        Set psFunctionName to "RemoveEndComments"

        {Published=False}
        Procedure RemoveEndComments_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveEndComments ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveLocalKeyWord is a cTestFixture
        Set psFunctionName to "RemoveLocalKeyWord"

        {Published=True}
        Procedure RemoveLocalKeyWord_Basic
            String sLine sExpected
            Boolean bChanged
            Move '  Local Integer iRename' to sLine
            Move '  Integer iRename' to sExpected
            Get RemoveLocalKeyWord of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure RemoveLocalKeyWord_After_Comment_Characters
            String sLine sExpected
            Boolean bChanged
            Move '  // Local Integer iRename' to sLine
            Move '  // Local Integer iRename' to sExpected
            Get RemoveLocalKeyWord of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure RemoveLocalKeyWord_In_Quotes
            String sLine sExpected
            Boolean bChanged
            Move '  "Local Integer iRename"' to sLine
            Move '  "Local Integer iRename"' to sExpected
            Get RemoveLocalKeyWord of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveMultipleBlankLines is a cTestFixture
        Set psFunctionName to "RemoveMultipleBlankLines"

        {Published=False}
        Procedure RemoveMultipleBlankLines_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveMultipleBlankLines ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveOldStudioMarkers is a cTestFixture
        Set psFunctionName to "RemoveOldStudioMarkers"

        {Published=True}
        Procedure RemoveOldStudioMarkers_AB_IgnoreStart
            String sLine sExpected
            Boolean bChanged
            Move '//AB-IgnoreStart' to sLine
            Move '//AB-IgnoreStart' to sExpected
            // Returns True if a legacy IDE (Studio) source code marker is found, and
            // in case the source line should be removed.
            Get RemoveOldStudioMarkers of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure RemoveOldStudioMarkers_AB_DDOEnd
            String sLine sExpected
            Boolean bChanged
            Move '//AB-DDOEnd' to sLine
            Move '//AB-DDOEnd' to sExpected
            Get RemoveOldStudioMarkers of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure RemoveOldStudioMarkers_PanelStoreTopStart
            String sLine sExpected
            Boolean bChanged
            Move '  //AB-PanelStoreTopStart' to sLine
            Move '  //AB-PanelStoreTopStart' to sExpected
            Get RemoveOldStudioMarkers of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure RemoveOldStudioMarkers_AB_Comment
            String sLine sExpected
            Boolean bChanged
            Move '  //AB/ ' to sLine
            Move '  //AB/ ' to sExpected
            Get RemoveOldStudioMarkers of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

        {Published=True}
        Procedure RemoveOldStudioMarkers_IDE_FileType
            String sLine sExpected
            Boolean bChanged
            Move '//IDE-FileType=ftApplication' to sLine
            Move '//IDE-FileType=ftApplication' to sExpected
            Get RemoveOldStudioMarkers of ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveProjectObjectStructure is a cTestFixture
        Set psFunctionName to "RemoveProjectObjectStructure"

        {Published=False}
        Procedure RemoveProjectObjectStructure_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveProjectObjectStructure ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemovePropertyPrivate is a cTestFixture
        Set psFunctionName to "RemovePropertyPrivate"

        {Published=False}
        Procedure RemovePropertyPrivate_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemovePropertyPrivate ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemovePropertyPublic is a cTestFixture
        Set psFunctionName to "RemovePropertyPublic"

        {Published=False}
        Procedure RemovePropertyPublic_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemovePropertyPublic ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveSansSerif is a cTestFixture
        Set psFunctionName to "RemoveSansSerif"

        {Published=False}
        Procedure RemoveSansSerif_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveSansSerif ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveStudioGeneratedComments is a cTestFixture
        Set psFunctionName to "RemoveStudioGeneratedComments"

        {Published=False}
        Procedure RemoveStudioGeneratedComments_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveStudioGeneratedComments ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveTrailingSpaces is a cTestFixture
        Set psFunctionName to "RemoveTrailingSpaces"

        {Published=False}
        Procedure RemoveTrailingSpaces_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveTrailingSpaces ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRemoveUnusedLocals is a cTestFixture
        Set psFunctionName to "RemoveUnusedLocals"

        {Published=False}
        Procedure RemoveUnusedLocals_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RemoveUnusedLocals ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oReplaceCalcWithMoveStatement is a cTestFixture
        Set psFunctionName to "ReplaceCalcWithMoveStatement"

        {Published=False}
        Procedure ReplaceCalcWithMoveStatement_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ReplaceCalcWithMoveStatement ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oReportUnusedSourceFiles is a cTestFixture
        Set psFunctionName to "ReportUnusedSourceFiles"

        {Published=False}
        Procedure ReportUnusedSourceFiles_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get ReportUnusedSourceFiles ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oRestylelDDOs is a cTestFixture
        Set psFunctionName to "RestylelDDOs"

        {Published=False}
        Procedure RestylelDDOs_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get RestylelDDOs ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

    Object oSplitInlineIfElseLine is a cTestFixture
        Set psFunctionName to "SplitInlineIfElseLine"

        {Published=False}
        Procedure SplitInlineIfElseLine_xx
            String sLine sExpected
            Boolean bChanged
            Move '' to sLine
            Move '' to sExpected
            Get SplitInlineIfElseLine ghoRefactorFunctionLibrary (&sLine) to bChanged
            Send AssertSAreEqual sExpected sLine
        End_Procedure

    End_Object

End_Object
