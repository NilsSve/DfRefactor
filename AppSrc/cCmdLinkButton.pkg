Use cCommandLinkButton.pkg
Use cCJSkinFramework.pkg
Use WsGlobalFunctions.pkg
Use cRefactorApplication.pkg
Use RefactorConstants.inc
Use oCmdLnkButtonContextmenu.pkg

Register_Function paObjects Returns Handle[]

// This class is designed to be used by oSelectWorkspace_dg
Class cCmdLnkButton is a cCommandLinkButton
    Procedure Construct_Object
        Forward Send Construct_Object
        Set Size to 26 216
        Set Location to 53 18    
        Set Label to 'oCommandLinkButton'
        Set psNote to "...sws file path"
        Set psImage to "Default.ico"
        Set peImageAlign to Button_ImageList_Align_Center
        // This doesn't work
        //Set piImageMarginLeft to 150
        Set TextColor to clDarkThemeText
        Set Visible_State to False 
        Set Skip_State to True
        Set piImageSize to 24
        Set MultiLineState to True
        Set pbCenterToolTip to True 
        
        Property Boolean pbRemovable True
    End_Procedure
    
    Procedure End_Construct_Object
        Handle[] aObjects
        Forward Send End_Construct_Object
        Delegate Get paObjects to aObjects
        Move Self to aObjects[SizeOfArray(aObjects)]
        Delegate Set paObjects to aObjects
        Set phoButtonPopup to (oRemoveRegValContextMenu(oPreCJCommandBarSystem(Self)))
    End_Procedure

    Procedure OnClick
        Send OpenWorkspace
    End_Procedure
    
    Procedure Mouse_Down2 Integer iWindowNumber Integer iPosition  
        Handle hoButtonPopup
        Forward Send Mouse_Down2 iWindowNumber iPosition
        Get phoButtonPopup to hoButtonPopup
        If (hoButtonPopup <> 0) Begin
            Set phInvokingObject of (phoButtonPopup(Self)) to (Object_Id(Self))
            Send Popup of (phoButtonPopup(Self))
        End
    End_Procedure

    Procedure OpenWorkspace
        String sSWSFile sPath 
        Get psNote to sPath
        Get vFolderFormat sPath to sPath
        Get Label to sSWSFile
        Send UpdateWorkspaceSelectorDisplay of ghoApplication (sPath + String(sSWSFile))
        // We don't want the skin framework in the DFRefactor program as skins does *not* work there,
        // instead CodeJock Themes are used there.
        Send Destroy of ghoSkinFramework
        Move 0 to ghoSkinFramework
        Send Stop_UI
    End_Procedure
    
    Procedure OpenContainingFolder
        String sSWSFile sPath 
        Get psNote to sPath
        Send vShellExecute "open" "explorer.exe" sPath ""
    End_Procedure
    
    Procedure CopyPath
        String sPath
        Integer iCh
        
        Get psNote to sPath
        Get OpenOutput "Clipboard:" to iCh
        If (iCh < 0) Begin
            Procedure_Return
        End
        Write channel iCh sPath
        Send CloseOutput iCh
    End_Procedure
    
    Procedure DeleteWorkspaceKey 
        Boolean bOK              
        Integer iSize iCount iItem
        String sKey sWs sPath sSWSFile
        String[] asWorkSpaces
        
        Get ReadWorkspaceKeysFromRegistry of ghoApplication to asWorkspaces
        Get Label to sSWSFile
        Get psNote to sPath
        Get vFolderFormat sPath to sPath
        Move (sPath + sSWSFile) to sWs
        Move (SearchArray(sWs, asWorkSpaces)) to iItem
        If (iItem = -1) Begin
            Send Info_Box "Couldn't find the registry key. Workspace not deleted."
            Procedure_Return
        End
        
        Move (RemoveFromArray(asWorkSpaces, iItem)) to asWorkSpaces
        Get piWorkspaceItems of ghoApplication to iSize  
        // 1. Clear all "RecentNN" registry key values.
        For iCount from 0 to iSize   
            Send WriteString of ghoApplication CS_WorkspacesKey (CS_WorkspaceRecentKey + String(iCount)) ""
        Loop
        
        // 2. Write the remaining asWorkspace values to the registry:
        Move (SizeOfArray(asWorkSpaces)) to iSize
        Decrement iSize
        For iCount from 0 to iSize
            Send WriteString of ghoApplication CS_WorkspacesKey (CS_WorkspaceRecentKey + String(iCount)) asWorkSpaces[iCount]
        Loop
    End_Procedure

End_Class                            
