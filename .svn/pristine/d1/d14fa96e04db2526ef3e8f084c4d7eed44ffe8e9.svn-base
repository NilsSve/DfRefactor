//Observable interface, part of the Observer design pattern.
//
//
//@author Ola Eld›y
Use VdfBase.pkg

Class cObservable_Mixin is a Mixin

    //Doc/ Interface=Private
    Procedure Define_cObservable_Mixin
        //Todo: Define an array of subscribedto objects
    End_Procedure
    
    //Doc /Interface=Public
    Procedure Subscribe Handle hObserver
        //Todo: Add to SubscribedTo
    End_Procedure
    
    //Doc /Interface=Public
    Procedure Unsubscribe Handle hObserver
        //Todo: Remove from SubscribedTo
    End_Procedure
    
    //The State method can be overridden to provide needed information to the observers.
    //Doc /Interface=Public
    Function State Returns String
    End_Function

    //Notify message will be sent from subscribed to "Observable" objects
    //Doc/ Interface=Public
    Procedure Notify
        //Todo: Send Update to all observers (members of SubscribedTo)
    End_Procedure
    
End_Class

//Here is the syntax for using this Mixin class in your own class:
//
//Use cObservable_Mixin.pkg // our mixin class package
//Class cYourClass is a cSomething
//    Procedure Construct_Object
//        Forward Send Construct_Object
//        :
//        send Define_cObservable_Mixin // Constructor method
//    End_Procedure
//    :
//    Import_Class_Protocol cObservable_Mixin
//    :
//End_Class
