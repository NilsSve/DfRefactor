Repeat
Until (Seqeof)

Declare_Datafile Customer

Procedure Start
    Variant[][] vData
    Integer iA iB iRow

    While ((Found) and (iA = iB))
    Loop

    If (iA > iB) Begin
        Move (Trim (Customer.Zip) * Trim (Customer.City)) to vData[iRow][2] // Name: ZipCode_City, Length: 100, Datatype: String
    End

End_Procedure

// From OldFMACCommands.pkg
#IFDEF SELECT
#ELSE
    #Replace SELECT |!C
#ENDIF

Function _ Global String sVar Returns String
End_Function

Function wsDoTranslate Integer iTextNo String sMenu Returns String
    Function_Return (_(sMenu))
End_Function

Function kalle Returns String
    Function_Return (_("January"))
End_Function

Procedure Logg String sVal
End_Procedure
Procedure Test
    String sErrMess sText sTemp sFileName
    Integer iYesNo

    Append sErrMess ("-" + _("You can't book this item.") + "\n")
    Append sText (_("Credit limit exceeded")) "  " (_("Continue to order?"))
    Get YesNo_Box (_("File exists") + " " + (sTemp + sFileName) + "\n" + _("Would you like to replace it") + "?") to iYesNo

    Send Logg (_("Customer no missing!"))
    Send Combo_Add_Item  (_("0 - Select")) "0"
    Set Value to (_("1 - Reservdelar")) "1"
End_Procedure

If (Found = False) Begin
    Set color of ghoApplication to clWhite
End
If (Found = False) Begin
    Set color of ghoApplication to clWhite
End

While (Seqeof = False)
Loop
While (SeqEof)
Loop

If (Found) Begin
    Reread // End comment
End
Move (Windowindex = Fieldindex) to Select // Comment
If (Select) Begin
    Move (Windowindex = Fieldindex) to Select // Comment
End

Integer iPosX iCommasX
String sRowX
If ((Mid(sRowX,1,iPosX)) = ",") Begin
    Add 1 to iCommasX
End

If (1 = 2) Begin
    If (1 > 2) Begin
        If (1 <> 2) Begin
            If (Found) Begin
                If (1 < 2) Begin
                End // If Begin
            End // [Found] Begin

        End // If bTrasig Begin
    End // If  Begin
End // [Found] Begin

Person_etikett_false:

//Set Current_Radio to 0

Register_Object oButton

Procedure One
    Date From_date
    String sVal
    Address aAddress
    Boolean bState
    String[] asArray
    Integer[] aiArray

    If (Seqeof = False) Begin
    End

    Move "Yes" to asArray[0]
    Move "No"  to asArray[1]
    Move 1     to aiArray[0]
    Move aiArray[0] to sVal
    Move (AddressOf(sVal)) to aAddress

    Set Enabled_State of (oApplication(Self)) to True // Comment here
    Get Enabled_State to (Not(bState)) // Other comment
    Set Enabled_State of oButton to bState

    Move True to bState
    Set Enabled_State of ghoapplication to (Not(bState)) // Third comment
    Set Enabled_State to False

    If (sVal <> "") Begin
        Move True to bState
    End

    //*****
    If ((Uppercase("a")) = (Uppercase("b"))) Begin
    End
    If (From_date = "" or not(IsDateValid(From_date)) or From_date < 1/1/1900) Begin
    End
End_Procedure

While (Seqeof = False)
Loop
While (Seqeof)
Loop
If (Found) Begin
    Reread // End comment
End
If (Found = False) Begin
    Set color of ghoApplication to clWhite
End
If (Found = False) Begin
    Set color of ghoApplication to clWhite
End
Repeat
Until (Seqeof)

Repeat
Until (Found = False)

Declare_Datafile Flexerrs

Procedure OnConstrain
    Constrain FlexErrs.Recnum gt 10
End_Procedure

Find Eq Flexerrs by Recnum

Procedure Test2
    Date dToday
    Sysdate dToday

    Move (True) to Found
    Move (windowindex < fieldindex) to Found

    Set piRowToInsert of AvgiftGrid to -1

    Send Stop_box (_("Please press the button 'Change Customer Number"))
End_Procedure

Object AvgiftGrid is a Grid
    Property Integer piRowToInsert -1
    Property Integer piCallbackObject 0
    Property String psCustomerIDToInsert ""
    Property Boolean pbOpenInEditModeRepeat False
    Property Boolean pbOpenPos False
End_Object

// Comment about the procedure
//    Procedure Deactivating
//        Forward Send Deactivating
//        Send Beginning_of_Data
//    End_Procedure

Use Windows.pkg
Use DfConfrm.pkg

Function StringFromRightOfChar String sIn String sOut Returns String
End_Function

Object Renames is an Array
End_Object

Register_Object oMain

Procedure OnChange
End_Procedure

Procedure OnClick
End_Procedure

Procedure Test3
    String sOutConnStr
    Integer iStart iRetVal

    If (iStart = 1) Begin
        Procedure_Return
    End

    Get Confirm (_("Start")) to iRetVal
    Set Value of (oMain(Self))  (Item_Count(Self)) to (Left(sOutConnStr, iStart - 1))
    Set Status_Help to "Enter fields to be renamed in format FILE.OLDFIELD,NEWFIELD, e.g. CUSTOMER.CUST,CUSTNO"
    Set Value to (_("Customer number is missing!"))
End_Procedure

Function ParseFolderName Global String sFileName Returns String
    String sFile sResult sFolderName sDirSep
    Integer iLength

    Move (ZeroString(iLength)) to sResult

    Move "" to sFolderName
    Move (sysconf(SYSCONF_DIR_SEPARATOR)) to sDirSep
    If (sFileName contains sDirSep) Begin
        Move (StringFromRightOfChar(sFileName,sDirSep)) to sFile
        Move (Replace(sFile,sFileName,"")) to sFolderName
    End
    Else If (sFileName contains ":") Begin
        Move (StringFromRightOfChar(sFileName,":")) to sFile
        Move (Replace(sFile,sFileName,"")) to sFolderName
    End
    Function_Return sFolderName
End_Function

Procedure Add_Row String sRow
    Integer bRename
    Integer iPos
    Integer iCommas
    Move True to bRename
    If ((Left(sRow,1)) <> "#") Begin
        Move False to bRename
    End
    If (bRename) Begin
        For iPos From 1 to (Length(sRow))
            If ((Mid(sRow,1,iPos)) = ",") Begin
                Add 1 to iCommas
            End
        Loop//iPos
        If (iCommas <> 2) Begin
            Move False to bRename
        End
    End
    If (bRename) Begin
        Set Value of (Renames(Self)) Item (Item_Count(Renames(Self))) to (Replace("#",sRow,""))
    End
    Else Begin
        Set Value Item (Item_Count(self)) to sRow
    End
End_Procedure

Object oWorkspace is a cObject
End_Object
Object oKey is a cObject
End_Object
Object oDFPath is a cObject
End_Object

Function PathRow Returns String
    String  retval
    If ((Current_Radio(Self)) = 0) Begin
        Move (Append("W",(Value(oWorkspace(Self),0)))) to retval
    End
    If ((Current_Radio(Self)) = 1) Begin
        Move (Append("K",(Value(oKey(Self),0)))) to retval
    End
    If ((Current_Radio(Self)) = 2) Begin
        Move (Append("P",(Value(oDFPath(Self),0)))) to retval
    End
    Function_Return retval
End_Function

Move False to Found
While (Found)
    Move Windowindex to Fieldindex
Loop

Function ScalaUtpris String Utpris Returns String
    Number L D P
    String sName

    Move (Trim(Utpris)) to Utpris
    Move (Length(Utpris)) to L
    Move (Pos(",", Utpris)) to P
    If (p <> 0) Begin
        Move (L-P) to D
        If (d = 1) Begin
            Append Utpris "0"
        End
        If (d > 2) Begin
            Move (Left(Utpris, (P+2))) to Utpris
        End
    End
    If (p = 0) Begin
        Append Utpris ".00"
    End

    Move (Length(UTPRIS)) to L
    While (L < 13)
        Move (Insert(" ", UTPRIS, 1)) to UTPRIS
        Move (Length(UTPRIS)) to L
    End

    Move (Replace("A", sName, "B")) to sName
    Move (Replace("A", sName, "B")) to sName

    Function_Return Utpris
End_Function
