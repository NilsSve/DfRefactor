Use Cursor.pkg
Use cRichEdit.pkg

Define clDarkGreen for (RGB(49, 60, 83))
Define CS_Failed   for "*** FAILED ***"
Define CS_Finished for "*** Finished! ***"
Class cDFUnitResultList is a cRichEdit
    Procedure Construct_Object
        Forward Send Construct_Object
        Set Read_Only_State to True
        Set Color to clDarkGreen
        Set TextColor to clWhite
    End_Procedure
    
    Procedure SetRunningColor
//        Set TextColor to clDarkGreen
    End_Procedure
    
    Procedure OnExecute
        Send SetRunningColor
    End_Procedure
    
    Procedure SetSuccessColor
//        Set Color to clLime
        Set TextBackColor to clDarkGreen
    End_Procedure 
    
    Procedure SetPassedRowColor
        Set TextBackColor to clDarkGreen
    End_Procedure
    
    Procedure SetWarningColor
        Set TextColor to clYellow
    End_Procedure
    
    Procedure SetFailedColor
//        Set Color to clRed
        Set TextBackColor to clRed
    End_Procedure
    
    Procedure SetFailedRowColor
        Set TextBackColor to clRed
    End_Procedure
    
    Procedure OnFail
        Send SetFailedColor
    End_Procedure
    
    Procedure OnSuccess
        Send SetSuccessColor
    End_Procedure
    
    Function TestResultOutputString Handle hResult Returns String
        String sResult sSuccess
        If (psSuccess(hResult) = "True") Begin
            Move "" to sSuccess
        End
        Else Begin
            Move CS_Failed to sSuccess
        End
        Move ("[" + FormatNumber(Number(SpanTotalMilliSeconds(pTime(hResult))) / 1000, 3) + "]" * psName(hResult) * string(sSuccess)) to sResult
        Function_Return sResult
    End_Function
    
    Procedure StartTestResults
    End_Procedure
    
    Procedure EndTestResults
    End_Procedure
    
    Procedure OutputTestResult Handle hResult Integer iIndentation
        String sResult
        Boolean bFailed

        If (num_arguments > 0) Begin
            Get TestResultOutputString hResult iIndentation to sResult
            Move (Pad("", iIndentation * 4) + sResult) to sResult
            Move (Pos(CS_Failed, sResult) > 0) to bFailed
            Set pbBold to bFailed
            If (bFailed = True) Begin
                Send SetFailedRowColor
            End
            Else Begin
                Send SetPassedRowColor
            End        
            Send AppendTextLn (Replaces("_", sResult, " "))
        End
        Else Begin
            Send AppendTextLn CS_Finished
        End
        // We need this to see each line as it is output.
        Send PumpMsgQueue of Desktop   
    End_Procedure
    
    Procedure OutputTestResults Handle hTestFixture Integer iIndentation
        Handle hTestCatalog hTest
        Get phTestCatalog of hTestFixture to hTestCatalog
        Send IteratorReset to hTestCatalog
        While (IteratorMoveNext(hTestCatalog))
            Get CurrentTest of hTestCatalog to hTest
            Send OutputTestResult (oTestResult(hTest)) iIndentation
        Loop              
    End_Procedure
    
    Procedure OutputTestFixtureResult Handle hTestFixture Integer iIndentation
        Handle hResult
        Move (oTestFixtureResult(hTestFixture)) to hResult
        Send OutputTestResult hResult iIndentation
        Send OutputTestResults hTestFixture (iIndentation + 1)
    End_Procedure
    
    Procedure OutputTestFixture Handle hTestFixture Integer iIndentation
        Send OutputTestFixtureResult hTestFixture iIndentation
        Send OutputTestFixtureCatalog (oTestFixtureCatalog(hTestFixture)) (iIndentation + 1)
    End_Procedure
    
    Procedure OutputTestFixtureCatalog Handle hTestFixtureCatalog Integer iIndentation
        Integer iIndentation_
        If (num_arguments >= 2) Begin
            Move iIndentation to iIndentation_
        End
        Send IteratorReset to hTestFixtureCatalog
        While (IteratorMoveNext(hTestFixtureCatalog))
            Send OutputTestFixture (CurrentTestFixture(hTestFixtureCatalog)) iIndentation_
        Loop
    End_Procedure
    
    Procedure OutputResults Handle hTestFixtureCatalog
        Send Cursor_Wait of Cursor_Control
        Send StartTestResults
        Send Delete_Data
        Send OutputTestFixtureCatalog hTestFixtureCatalog
        Send EndTestResults
        Send OutputTestResult
        Send Cursor_Ready of Cursor_Control
    End_Procedure
    
    Procedure OnExecuteFinished
    End_Procedure
End_Class