Use Windows.pkg
Use cRDCButtonDPI.pkg
Use cRDCModalPanel.pkg
Use seq_chnl.pkg
Use vwin32fh.pkg
Use cCJGrid.pkg
Use cCJGridColumnRowIndicator.pkg
Use cCJGridColumn.pkg
Use cCJGridPromptList.pkg

Object oErrorLog_dg is a cRDCModalPanel
    Set Size to 214 590
    Set Label to "Error Log Dialog"
    Set piMinSize to 89 211
    Set Location to 2 2
    Set Icon to "OpenLogFile.ico" 
    Set Locate_Mode to CENTER_ON_PARENT

    Property String psErrorLogFile ""
    Property Integer piIndent

    Object oErrorLog_grd is a cCJGridPromptList
        Set Size to 177 566
        Set Location to 9 10
        Set pbGrayIfDisable to False
        Set pbShowFooter to True
        Set pbShowRowFocus to True
        Set pbUseAlternateRowBackgroundColor to True
        Set pbUseFocusCellRectangle to False
        Set peAnchors to anAll
        Set psNoItemsText to "No error log file"
        Set pbAllowAppendRow to False
        Set pbAllowInsertRow to False
        Set pbAutoAppend to False
        Set pbRestoreLayout to True 
        Set psLayoutSection to (Name(Self))
        Set pbSelectionEnable to True
        Set peUpdateMode to umPromptCustom
        Set pbAllowColumnReorder to False
        Set pbAutoOrdering to False
        Set pbAutoSeed to False
        Set pbEditOnTyping to False
        Set pbHeaderReorders to False
        Set pbHeaderSelectsColumn to False
        Set pbHeaderTogglesDirection to False

        Object oLineNumber_col is a cCJGridColumn
            Set piWidth to 34
            Set pbEditable to False
            Set psCaption to "Line"
        End_Object

        Object oErrorText_col is a cCJGridColumn
            Set piWidth to 910
            Set psCaption to "Error Message"
        End_Object   
        
        Procedure LoadData
            String sErrorLogFile sLine
            Integer iRow iColRow iCol iChannel iLine
            Handle hoDataSource
            tDataSourceRow[] TheData
            Boolean bFound
    
            Get Seq_New_Channel to iChannel
            If (iChannel = DF_SEQ_CHANNEL_NOT_AVAILABLE) Begin
                Send Info_Box "No channel available for processing error log file" "Error"
                Procedure_Return
            End 
            
            Move 0 to iRow
            Get phoDataSource to hoDataSource
            Get piColumnId of oLineNumber_col to iColRow
            Get piColumnId of oErrorText_col to iCol
            Get psErrorLogFile to sErrorLogFile        
            Direct_Input channel iChannel sErrorLogFile
            While (SeqEof = False)
                Readln channel iChannel sLine
                If (Trim(sLine) <> "") Begin     
                    Get ExtractLineNumber sLine to iLine
                    Move iLine to TheData[iRow].sValue[iColRow] 
                    Move sLine  to TheData[iRow].sValue[iCol] 
                    Increment iRow
                End
            Loop
    
            Set psFooterText of oLineNumber_col to iRow
            Set psFooterText of oErrorText_col to sErrorLogFile
            Send InitializeData TheData
            Send MovetoFirstRow
        End_Procedure      
        
        Function ExtractLineNumber String sLine Returns Integer
            String sSearch
            Integer iPos iLine
            
            Move 0 to iLine
            Move " ON LINE: " to sSearch
            Move (Pos(sSearch, sLine)) to iPos
            If (iPos <> 0) Begin
                Move (Mid(sLine, Length(sLine), (iPos + Length(sSearch)))) to sLine
                Move (Pos(" ", sLine)) to iPos
                Move (Left(sLine, (iPos - 1))) to sLine
                Move (Trim(sLine)) to iLine 
            End
            Function_Return iLine
        End_Function                    

        Procedure OnMoveValueOutByCustom 
            Boolean bFound 
            Integer iCol iPos iLine
            String[] asSel   
            String sLine sSearch
            Handle ho
            
            Move False to bFound     
            Get piColumnId of oLineNumber_col to iCol
            Get SelectedColumnValues iCol to asSel
            Move asSel[0] to iLine
            Send Close_Panel
            Send JumpToSourceLine of (Client_Id(phoMainPanel(ghoApplication))) iLine    
        End_Procedure

    End_Object
    
    Object oFirstRow_btn is a cRDCButtonDPI
        Set Location to 193 414
        Set Label to "View Top"
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send MovetoFirstRow to oErrorLog_grd
        End_Procedure

    End_Object

    Object oLatestRow_btn is a cRDCButtonDPI
        Set Location to 193 471
        Set Label to "View Bottom"
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send MoveToLastRow to oErrorLog_grd
        End_Procedure

    End_Object

    Object oCancel_Btn is a cRDCButtonDPI
        Set Label    to "&Close"
        Set Location to 193 528
        Set peAnchors to anBottomRight

        Procedure OnClick
            Send Close_Panel
        End_Procedure

    End_Object

    On_Key Key_Alt+Key_F  Send KeyAction of oFirstRow_btn
    On_Key Key_Ctrl+Key_F Send KeyAction of oFirstRow_btn
    On_Key Key_Alt+Key_L  Send KeyAction of oLatestRow_btn
    On_Key Key_Ctrl+Key_L Send KeyAction of oLatestRow_btn
    On_Key Key_Alt+Key_C  Send KeyAction of oCancel_Btn
End_Object

Procedure ActivateErrorDialog String sErrorLogFile
    Handle ho
    Boolean bExists

    Get vFilePathExists sErrorLogFile to bExists
    If (bExists = False) Begin
        Send Info_Box "The ErrorLog doesn't exist."
        Procedure_Return
    End
    Move (oErrorLog_dg(Self)) to ho
    Set psErrorLogFile of ho to sErrorLogFile
    Send Popup of ho
End_Procedure
