Register_Function IsValid String sNumber String sValidChars String sSign String sDecimalSeparator Returns Boolean

Class cStringMethods is a cObject
    // isNumber determines if a string can be interpreted as a valid number,
    // i.e. it can be moved directly to an Integer or Number variable.
    // Empty string is not valid as 0, and will be returnes as invalid.
    // In addition to digits 0-9, a valid number may also contain the decimal
    // separator, as it is set in regional settings in Windows.
    // It is also possible to specify the decimal separator and thousands separator.
    Function IsNumber String sNumber String sDecimalSeparator String sThousandsSeparator Returns Boolean
        String sValidChars sThousandsSeparator_ sDecimalSeparator_ sSign
        Integer iDecimalSeparator_
        If (Num_Arguments >= 2) Move sDecimalSeparator to sDecimalSeparator_
        Else Begin
            //Decimal separator: 44 = comma, 46 = period
            Get_Attribute DF_DECIMAL_SEPARATOR to iDecimalSeparator_
            Move (Character(iDecimalSeparator_)) to sDecimalSeparator_
        End
        If (Pos(sDecimalSeparator_, sNumber) <> RightPos(sDecimalSeparator_, sNumber)) Begin
            Function_Return False //More than one decimal separator
        End
        If (Num_Arguments >= 3) Move sThousandsSeparator to sThousandsSeparator_
        Else Move "" to sThousandsSeparator_
        Move (Replaces(sThousandsSeparator_, sNumber, "")) to sNumber
        Move "+-" to sSign
        Move ("0123456789" + sThousandsSeparator_) to sValidChars
        Function_Return (IsValid(Self, sNumber, sValidChars, sSign, sDecimalSeparator_))
    End_Function
    
    Function IsInteger String sNumber Returns Boolean
        String sValidChars sSign
        Move "0123456789" to sValidChars
        Move "+-" to sSign
        Function_Return (IsValid(Self, sNumber, sValidChars, sSign))
    End_Function
    
    Function IsPositiveOrZeroInteger String sNumber Returns Boolean
        String sValidChars sSign
        Move "0123456789" to sValidChars
        Move "+" to sSign
        Function_Return (IsValid(Self, sNumber, sValidChars, sSign))
    End_Function
    
    {Visibility=Private}
    Function IsValid String sNumber String sValidChars String sSign String sDecimalSeparator Returns Boolean
        Boolean bIsNumber
        Integer iLength iCount
        String sDigit sSign_ sDecimalSeparator_
        If (num_arguments >= 3) Move sSign to sSign_
        If (Pos(Left(sNumber, 1), sSign_) > 0) Move (Mid(sNumber, Length(sNumber) - 1, 2)) to sNumber
        If (num_arguments >= 4) Move sDecimalSeparator to sDecimalSeparator_
        Move (Replaces(sDecimalSeparator_, sNumber, "")) to sNumber
        Move (Length(sNumber)) to iLength
        If (iLength = 0) Function_Return False
        For iCount from 1 to iLength
            Move (Mid(sNumber,1,iCount)) to sDigit
            Move (Pos(sDigit, sValidChars)) to bIsNumber
            If (not(bIsNumber)) Function_Return False
        Loop
        Function_Return True
    End_Function
End_Class

//Global variable serves as "static class identifier"
Global_Variable Handle gcStringMethods
Object oStringMethods is a cStringMethods
    Move Self to gcStringMethods
End_Object
