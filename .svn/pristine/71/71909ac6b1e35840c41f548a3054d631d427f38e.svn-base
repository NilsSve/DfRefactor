// The Refactor Testing program is aimed at testing small refactoring functions, to make they work exactly as intended.
// After those new refactoring functions have been thoroughly tested, they can be implemented in the main DfRefactor program.
//
Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg 
Use cCJCommandBarSystem.pkg
Use gFormatNumbers.pkg
Use vwin32fh.pkg
Use SourceCode.inc
Use cFilesystem.pkg

Object oHtmlHelp is a cHtmlHelp
    Set pbAlwaysOnTop to False
End_Object

#IFNDEF ghoFileSystem
Global_Variable Integer ghoFileSystem
#ENDIF
Get Create (RefClass(cFilesystem)) to ghoFileSystem

Object oApplication is a cApplication
    Set psProduct to "DFRefactor - Refactoring for DataFlex"
    Set psCompany to "RDC Tools International"
    Set psHelpFile to "DFRefactor.chm"
    Set peHelpType to htHtmlHelp
    
    Property Boolean pbIsRefactoring False
    Property String private.psFileCompareApp   
    Property Handle phoTestView
    Property String psLegacySourceFile    
    Property String psRefactoredSourceFile
    Property Handle phoEditorLegacy
    Property Handle phoEditorRefactored
    
    // Just a stub message for the Scintilla editor inner workings. 
    Procedure DisplayPerfCounters 
    End_Procedure

    { MethodType=Property }
    Function psSWSFile Returns String
        Function_Return (psWorkspaceWSFile(phoWorkspace(ghoApplication)))
    End_Function   
    
    Procedure UpdateSourceFileNameDisplay String sFileName
    End_Procedure

    Function StartPerfCounter Integer eOperation String sComment Returns Integer
        Function_Return 0
    End_Function

    Procedure StopPerfCounter Integer iCounter
    End_Procedure
    
    Procedure Set psFileCompareApp String sProgramName
        Send WriteString CS_Settings CS_FileCompareProgram sProgramName
        Set private.psFileCompareApp to sProgramName
    End_Procedure

    Function psFileCompareApp Returns String
        String sProgramName
        Get private.psFileCompareApp to sProgramName
        If (sProgramName = "") Begin
            Get ReadString CS_Settings CS_FileCompareProgram "" to sProgramName
            Set private.psFileCompareApp to sProgramName
        End
        Function_Return sProgramName
    End_Function

    Procedure CompareFiles
        Boolean bExist bExist2
        String sCompareApp sLegacyCodeFile sRefactoredCodeFile

        Get psFileCompareApp to sCompareApp
        File_Exist sCompareApp bExist
        If (bExist = False) Begin
            Send Info_Box "You need to specify the compare program first."
            Procedure_Return
        End

        Get psCodeFile of (phoEditorLegacy(Self)) to sLegacyCodeFile                          
        File_Exist sLegacyCodeFile bExist
        Get psCodeFile of (phoEditorRefactored(Self)) to sRefactoredCodeFile
        File_Exist sRefactoredCodeFile bExist2
        If (bExist = False or bExist2 = False) Begin
            Send Info_Box "You have to create the legacy and refactored source code files first."
            Procedure_Return
        End
        
        Runprogram Background ('"' + sCompareApp + '"') ('"' + sLegacyCodeFile + '" "' + sRefactoredCodeFile + '"')
    End_Procedure

    Procedure SaveCodeFiles
        Handle hoEditor
        Boolean bChanged

        Get phoEditorLegacy to hoEditor
        If (hoEditor) Begin
            Send SaveFile of hoEditor
        End
        
        Get phoEditorRefactored to hoEditor
        If (hoEditor) Begin
            Send SaveFile of hoEditor
        End        
    End_Procedure

    Procedure CompileRefactoredCode
        String sRefactoredFile sBinPath sHome sAppSrc sCompareApp
        Boolean bExists bIsRefactoring
        Integer iLines     
        Handle ho
        
        Get pbIsRefactoring to bIsRefactoring
        If (bIsRefactoring = True) Begin
            Procedure_Return
        End                 
        
        Get phoEditorRefactored to ho
        Get Line_Count of ho to iLines
        If (iLines <= 1) Begin
            Send Info_Box "You need to press 'Refactor Legacy Code', or short-cut key (Ctrl+R)"
            Procedure_Return
        End
        Get DFBinPath to sBinPath             
        Get vFolderFormat sBinPath to sBinPath
        Get psHome of (phoWorkspace(Self)) to sHome
        Get vFolderFormat sHome to sHome             
        Get psAppSrcPath of (phoWorkspace(Self)) to sAppSrc
        Get vFolderFormat sAppSrc to sAppSrc
        
        Send Execute of (oSave_ToolItem(ghoCommandBars))
        Get psCodeFile of (phoEditorRefactored(Self)) to sRefactoredFile
        Send Cursor_Wait of (Cursor_Control(Self))
        Runprogram Wait ('"' + sBinPath + CS_Compiler + '"' * "-x" + '"' + sHome + CS_SWSFile + '"' * CS_CompOptions * CS_TestProgram)
        
        Send Cursor_Ready of (Cursor_Control(Self))    
        Get FileSize of ghoFileSystem (sAppSrc + CS_TestErrFile) to iLines
        If (iLines > 0) Begin
            Send ActivateErrorDialog of (Client_Id(phoMainPanel(ghoApplication))) (sAppSrc + CS_TestErrFile)
        End  
        Else Begin
            Send Info_Box "The refactored code compiled successfully!"
        End
    End_Procedure                                               
    
    Procedure OpenContainingContainer
        String sPath sFile
        
        Get psLegacySourceFile to sFile
        Get ParseFolderName sFile to sPath
        // We want to have that file to be selected in Windows Explorer
        If (sFile <> "") Begin
            Move ("/select, " + sFile) to sPath
        End
        Send vShellExecute "open" "explorer.exe" sPath ""
    End_Procedure
                
End_Object    

Object oToolTipController is a cToolTipController
    Move Self to ghoToolTipController
    Set piIcon to TTI_INFO
    Set psTitle to "Info"
    Set piMaxWidth to 250
    Set piDurationPopup to 14000 // 14 seconds, needed for long tooltips.
    Set pbUsePrefix to True
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu.pkg

Object oMain is a Panel
    Set Label to "Refactor Functions Testing"
    Set Location to 4 3
    Set Size to 300 474

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True
        Set peVisualTheme to xtpThemeOffice2016Publisher
        Set pbAutoResizeIcons to True
        Set peRestoreLayout to rlSaveRestoreAll
        Set pbTabbedWorkspaces to True
        Set pbLargeIcons to True
        Set piLayoutBuild to 3

        Procedure OnCreateCommandBars
            Handle hoOptions
            Get OptionsObject to hoOptions
            Forward Send OnCreateCommandBars
        End_Procedure

        Object oEditToolBar is a cCJToolbar
            Set psTitle to "Edit Toolbar"
            Set pbCloseable to False
            Set pbEnableAnimation to True
            Set pbShowExpandButton to False

            Object oCutToolbarItem is a cCJCutMenuItem
            End_Object

            Object oCopyToolbarItem is a cCJCopyMenuItem
            End_Object

            Object oPasteToolbarItem is a cCJPasteMenuItem
            End_Object

            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
                Set pbControlBeginGroup to True
            End_Object   

            Object oToggleWhiteSpaceItm is a cCJMenuItem
                Set pbControlBeginGroup to True
                Set psImage to "ToggleWhiteSpace.ico"
                Set psCaption to "Toggle &White Space"
                Set psToolTip to "Toggle editor(s) white space (Ctrl+W)"
    
                Procedure OnExecute Variant vCommandBarControl
                    Integer iRetval
                    Boolean bIsWhiteSpace
                    Handle hoEditor
                    
                    Get phoEditorLegacy of ghoApplication to hoEditor
                    Get CM_IsWhitespaceDisplayEnabled of hoEditor to bIsWhiteSpace
                    Get CM_EnableWhitespaceDisplay of hoEditor (not(bIsWhiteSpace)) to iRetval
                    Get phoEditorRefactored of ghoApplication to hoEditor
                    Get CM_EnableWhitespaceDisplay of hoEditor (not(bIsWhiteSpace)) to iRetval
                End_Procedure
                
            End_Object    

            Object oToogleIndentationGuides is a cCJMenuItem
                Set psImage to "ToggleIndentationGuides.ico"
                Set psCaption to "Toggle &Indentation Guides"
                Set psToolTip to "Toggle Indentation Guides (Ctrl+I)"
    
                Procedure OnExecute Variant vCommandBarControl
                    Integer iRetval
                    Boolean bIsWhiteSpace
                    Handle hoEditor
                    
                    Get phoEditorLegacy of ghoApplication to hoEditor
                    Send ToggleIndentationGuides of hoEditor
                    Get phoEditorRefactored of ghoApplication to hoEditor
                    Send ToggleIndentationGuides of hoEditor
                End_Procedure
    
            End_Object    

            Object oSave_ToolItem is a cCJSaveMenuItem
                Set peControlStyle to xtpButtonIcon
                Set pbControlBeginGroup to True
                Set psCaption to "&Save"
                Set psToolTip to "Save (Ctrl+S)"
                Set psDescription to "Save editor changes (Ctrl+S)"
                Set psShortcut to "Ctrl+S"  
                
                Procedure OnExecute Variant vCommandBarControl
                    Send Request_Save of (Focus(Self))
                    Send SaveCodeFiles of ghoApplication 
                End_Procedure
    
                Function IsEnabled Returns Boolean 
                    Boolean bChangedLegacy bChangedRefactored
                    
                    Get CM_IsModified of (phoEditorLegacy(ghoApplication)) to bChangedLegacy
                    Get CM_IsModified of (phoEditorRefactored(ghoApplication)) to bChangedRefactored
                    
                    Function_Return (bChangedLegacy = True or bChangedRefactored = True)
                End_Function
                
            End_Object

        End_Object            
        
        Object oActions_toolbar is a cCJToolbar
            Set psTitle to "Action Toolbar"
            Set pbCloseable to False
            Set pbEnableAnimation to True
            Set pbShowExpandButton to False

            Object oRefactor_ToolItem is a cCJMenuItem
                Set pbControlBeginGroup to True
                Set pbActiveUpdate to True
                Set peControlStyle to xtpButtonIconAndCaption 
                Set psCaption to "&Refactor Code"
                Set psToolTip to "Refactor Legacy Code (Alt+R)"
                Set psDescription to "Refactor Legacy Code (Alt+R)" 
                Set psImage to "Start.ico"
                Set psShortcut to "Ctrl+R"   
                
                Procedure OnExecute Variant vCommandBarControl
                    Send RefactoreCode of (phoTestView(ghoApplication))
                End_Procedure

            End_Object

            Object oCompare_MenuItem is a cCJMenuItem
                Set peControlStyle to xtpButtonIconAndCaption 
                Set psCaption to "Co&mpare"
                Set psToolTip to "Co&mpare Diff's Legacy && Refactored (Alt+M)"
                Set psDescription to "Compare file changes after running refactoring function(s) (Alt+M)"
                Set psImage to "Compare.ico"
                Set pbActiveUpdate to True
                Set pbControlBeginGroup to True

                Procedure OnExecute Variant vCommandBarControl
                    String sCompareApp
                    
                    Send Execute of (oSave_ToolItem(ghoCommandBars))
                    Get psFileCompareApp of ghoApplication to sCompareApp
                    Send CompareFiles of ghoApplication sCompareApp
                End_Procedure

                Function IsEnabled Returns Boolean
                    Integer iLegacyLines iRefactorLines
                    If (pbIsRefactoring(ghoApplication) = True) Begin
                        Function_Return False
                    End
                    Get CM_GetLineCount of (phoEditorLegacy(ghoApplication)) to iLegacyLines
                    Get CM_GetLineCount of (phoEditorRefactored(ghoApplication)) to iRefactorLines
                    Function_Return (iLegacyLines > 1 and iRefactorLines > 1)
                End_Function

            End_Object

            Object oCompile_ToolItem is a cCJMenuItem
                Set peControlStyle to xtpButtonIconAndCaption 
                Set pbControlBeginGroup to True
                Set pbActiveUpdate to True
                Set psCaption to "Compile"
                Set psToolTip to "Compile refactored code (F5)"
                Set psDescription to "Compile refactored code (F5)" 
                Set psImage to "CompileProject.ico"
                Set psShortcut to "F5"   
                
                Procedure OnExecute Variant vCommandBarControl
                    Send CompileRefactoredCode of ghoApplication
                End_Procedure

                Function IsEnabled Returns Boolean
                    Integer iLines
                    If (pbIsRefactoring(ghoApplication) = True) Begin
                        Function_Return False
                    End
                    Get CM_GetLineCount of (phoEditorRefactored(ghoApplication)) to iLines
                    Function_Return (iLines > 1)
                End_Function
                
            End_Object

            Object oErrorLog_ToolItem is a cCJMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set pbControlBeginGroup to True
                Set pbActiveUpdate to True
                Set psCaption to "Show &Error Log"
                Set psToolTip to "Show Error log from compilation (Ctrl+E)"
                Set psDescription to "Show Error Log (Ctrl+E)"    
                Set psImage to "CompileProjectErrors.ico"
                Set psShortcut to "Alt+E"

                Procedure OnExecute Variant vCommandBarControl
                    String sAppSrcPath
                    Boolean bExists

                    Get psAppSrcPath of (phoWorkspace(ghoApplication)) to sAppSrcPath
                    Get vFolderFormat sAppSrcPath to sAppSrcPath
                    Get vFilePathExists (sAppSrcPath + CS_TestErrFile) to bExists
                    If (bExists = True) Begin
                        Send ActivateErrorDialog of (Client_Id(phoMainPanel(ghoApplication))) (sAppSrcPath + CS_TestErrFile)
                    End
                End_Procedure

                Function IsEnabled Returns Boolean
                    Boolean bExists
                    String sAppSrcPath

                    Get psAppSrcPath of (phoWorkspace(ghoApplication)) to sAppSrcPath
                    Get vFolderFormat sAppSrcPath to sAppSrcPath
                    Get vFilePathExists (sAppSrcPath + CS_TestErrFile) to bExists
                    Function_Return (bExists = True)
                End_Function

            End_Object

        End_Object  

        Object oPrograms_toolbar is a cCJToolbar
            Set psTitle to "Programs Toolbar"
            Set pbCloseable to False
            Set pbEnableAnimation to True
            Set pbShowExpandButton to False

            Object oUnitTest_MenuItem is a cCJMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set psCaption to "Run &Unit Tests"
                Set psToolTip to "Run Unit Testing program (Alt+U)"
                Set psDescription to "Run Unit Testing program  (Alt+U)"
                Set psImage to "UnitTesting.ico"                        
                Set psShortcut to "Ctrl+U"
                Set pbControlBeginGroup to True
                
                Procedure OnExecute Variant vCommandBarControl
                    Boolean bExists
                    String sProgramPath sProgramFile sSourceFile sBinPath sHome
                    
                    Get DFBinPath of ghoApplication to sBinPath             
                    Get vFolderFormat sBinPath to sBinPath
                    Get psHome of (phoWorkspace(ghoApplication)) to sHome
                    Get vFolderFormat sHome to sHome             
                    Get psProgramPath of (phoWorkspace(ghoApplication)) to sProgramPath
                    Get vFolderFormat sProgramPath to sProgramPath
                    Move (CS_DFUnitTest + ".src") to sSourceFile
                    Move (Replace(".src", sSourceFile, ".exe")) to sProgramFile
                    Get vFilePathExists (sProgramPath + sProgramFile) to bExists

                    Runprogram Wait ('"' + sBinPath + CS_Compiler + '"' * "-x" + '"' + sHome + CS_SWSFile + '"' * CS_CompOptions * sSourceFile)

                    Get vFilePathExists (sProgramPath + sProgramFile) to bExists
                    // If Unit test program compilation failed:
                    If (bExists = False) Begin
                        Send Info_Box ("The compilation of the" * (CS_DFUnitTest + ".src program") * "failed and can't be run. Please check it with the Studio.")     
                    End
                    Else Begin
                        Runprogram Wait sProgramFile
                    End
                End_Procedure
            
            End_Object

            Object oDFRefactor_MenuItem is a cCJMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set psCaption to "Run &DFRefactor"
                Set psToolTip to "Run the main DFRefactor program (Alt+D)"
                Set psDescription to "Run Unit Testing program  (Alt+D)"
                Set psImage to "DFRefactor.ico"                        
                Set psShortcut to "Ctrl+D"

                Procedure OnExecute Variant vCommandBarControl
                    Boolean bExists
                    String sProgramPath sProgramFile
                    
                    Move "DFRefactor.exe" to sProgramFile
                    Get psProgramPath of (phoWorkspace(ghoApplication)) to sProgramPath
                    Get vFolderFormat sProgramPath to sProgramPath
                    Get vFilePathExists (sProgramPath + String(sProgramFile)) to bExists
                    If (bExists = False) Begin
                        Send Info_Box "Can't find the DFRefactor.exe program. Is it compiled?"
                        Procedure_Return
                    End
                    Runprogram Background (sProgramPath + String(sProgramFile))    
                End_Procedure
                
            End_Object                
            
            Object oOpenContainingFolder_MenuItem is a cCJMenuItem
                Set psImage to "ActionOpenContainingFolder.ico"
                Set psCaption to "Containing Folder"
                Set psToolTip to "Open Containing Folder (Ctrl+O)"
                Set psDescription to "Open Containing Folder"
                Set pbActiveUpdate to True
                Set pbControlBeginGroup to True

                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    String sPath sFile

                    Get psAppSrcPath of (phoWorkspace(ghoApplication)) to sPath
                    Get psLegacySourceFile of ghoApplication to sFile

                    // We want to have that file to be selected in Windows Explorer
                    If (sFile <> "") Begin
                        Move ("/select, " + sFile) to sPath
                    End
                    Send vShellExecute "open" "explorer.exe" sPath ""
                End_Procedure

                Function IsEnabled Returns Boolean
                    String sFile 
                    Boolean bExists
                    Get psLegacySourceFile of ghoApplication to sFile 
                    Get vFilePathExists sFile to bExists
                    Function_Return (bExists = True)
                End_Function

            End_Object

        End_Object

        Object oExit_toolbar is a cCJToolbar
            Set pbCloseable to False
            Set pbEnableAnimation to True
            Set pbShowExpandButton to False

            Object oAbout_MenuItem is a cCJMenuItem
                Set psCaption to "About"
                Set psToolTip to "About"
                Set psDescription to "About the program"
                Set psImage to "ActionAbout.ico"
                Set pbControlBeginGroup to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Activate_About of (Client_Id(ghoCommandBars))
                End_Procedure
            End_Object
            
            Object oHelpMenuItem is a cCJHelpMenuItem
                Set psToolTip to "Help"
                Set psDescription to "Help about the program (F1)"
            End_Object

            Object oExitMenuItem is a cCJExitMenuItem
                Set psImage to "ActionExit.ico"
                Set psToolTip to "Exit"
                Set psDescription to "Exit the program (Alt+F4)"
                Set pbControlBeginGroup to True
            End_Object

        End_Object

        Object oFindToolBar is a cCJToolbar
            Set psTitle to "Find Edit Toolbar"
            Set pbDockNextTo to False
            Set peStretched to stStretch
            Set pbVisible to False
            
            Object oFindFirstTool is a cCJFindFirstMenuItem
            End_Object
            
            Object oFindPreviousTool is a cCJFindPreviousMenuItem
            End_Object
            
            Object oFindMenuTool is a cCJFindMenuItem
            End_Object
            
            Object oFindNextTool is a cCJFindNextMenuItem
            End_Object
            
            Object oFindLastTool is a cCJFindLastMenuItem
            End_Object
            
            Object oPromptToolItem is a cCJPromptMenuItem
                Set pbControlBeginGroup to True
            End_Object
            
            Object oClearToolItem is a cCJClearMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
            End_Object
            
            Object oSaveToolItem is a cCJSaveMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
                Set pbControlBeginGroup to True
            End_Object
            
            Object oDeleteToolItem is a cCJDeleteMenuItem
                Set peControlStyle to xtpButtonIconAndCaption
            End_Object
            
        End_Object

        Object oStatusBar is a cCJStatusBar
            Set StatusBar_Id to Self

            Object oStatusPane1 is a cCJStatusBarPane
                Set piID to sbpIDIdlePane
                Set pbStyleStretch to True
            End_Object

            Object oStatusPane2 is a cCJStatusBarPane
                Set phoViewPane to Self
                Set pbStyleStretch to True
            End_Object

            Object oStatusPane3 is a cCJStatusBarPane
//                Set psText to "Current Action:"
            End_Object

            Object oNumberOfLines_StatusbarPane is a cCJStatusBarPane
                Set psText to "No of Lines:"
            End_Object

            Object oNumberOfCharacters_StatusbarPane is a cCJStatusBarPane
                Set psText to "Characters:"
            End_Object

            Procedure Set NumberOfEditorLines String sText
                Move (FormatValue(sText, ",###")) to sText
                Set psText of oNumberOfLines_StatusbarPane to ("No of Lines:" * String(sText))
            End_Procedure

            Procedure Set NumberOfEditorCharacters String sText
                Move (FormatValue(sText, ",###")) to sText
                Set psText of oNumberOfCharacters_StatusbarPane to ("Characters:" * String(sText))
            End_Procedure

            Procedure Set ActionText String sText
                Handle hoViewPane
                Get phoViewPane to hoViewPane
                Set psText of hoViewPane to sText
            End_Procedure

            Procedure Set CurrentActionText String sText
                Handle hoViewPane
                Move (oStatusPane3(Self)) to hoViewPane
                Set psText of hoViewPane to sText
            End_Procedure  
            
        End_Object
        
    End_Object

    Object oClientArea is a ClientArea
//        Use RefactorTesting.vw
        Use RefactorTestingFunctionTable.vw
        Use FunctionMaintenance.vw
        Use SelectFunctions.vw
//        Use MaintainFunctions.vw

        Use ErrorLog.dg
        Use StdAbout.pkg
        Procedure Activate_About
            Send DoAbout "" "" "" "Author: Nils Svedmyr" "DFRefactorTest72x72.bmp" "http://www.rdctools.com" "http://vdf-guidance.com"
        End_Procedure
    
        // We doesn't allow closing of a view - it just doesn't make
        // sense with a tabbed interface.
        Function Exit_Loss_Confirmation for cUIObject Returns Integer
            Function_Return 1
        End_Function

        On_Key Key_Ctrl+Key_W Send Execute of (oToggleWhiteSpaceItm(ghoCommandBars))
        On_Key Key_Ctrl+Key_I Send Execute of (oToogleIndentationGuides(ghoCommandBars))
        On_Key Key_Ctrl+Key_S Send Execute of (oSave_ToolItem(ghoCommandBars))          
        On_Key Key_Ctrl+Key_R Send Execute of (oRefactor_ToolItem(ghoCommandBars))
        On_Key Key_Ctrl+Key_M Send Execute of (oCompare_MenuItem(ghoCommandBars))
        On_Key Key_F5         Send Execute of (oCompile_ToolItem(ghoCommandBars))
        On_Key Key_Ctrl+Key_E Send Execute of (oErrorLog_ToolItem(ghoCommandBars))
        On_Key Key_Ctrl+Key_U Send Execute of (oUnitTest_MenuItem(ghoCommandBars))
        On_Key Key_Ctrl+Key_O Send OpenContainingContainer of ghoApplication
        On_Key Key_Ctrl+Key_Tab           Send Switch_Next_View
        On_Key Key_Ctrl+Key_Shift+Key_Tab Send Switch_Prior_View
    End_Object
                                
End_Object

Send Switch_Prior_View of (Client_Id(phoMainPanel(ghoApplication)))

Start_UI                                
