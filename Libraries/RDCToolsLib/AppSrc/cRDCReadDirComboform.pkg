//****************************************************************************
// $Module type: Class
// $Module name: cReadDirComboform.pkg
// $Author     : Nils G. Svedmyr, RDC Tools International
// Created     : 2007-09-12 @ 21:55
//
// Description : A Comboform class that dynamically reads the
//               file content of a folder and populate the comboform
//               list whith those files during object creation.
//
//               It will _not_ search subfolders.
//
//               The psExtension property can handle two values, if
//               separated with a semicolon (;) e.g. "*.msstyles;*.cjstyles"
//
// $Rev History:
//    2008-03-06  Module header created
//****************************************************************************
Use Windows.pkg
Use Seq_Chnl.pkg
Use vWin32fh.pkg

Class cReadDirComboform is a ComboForm
    Procedure Construct_Object
        Forward Send Construct_Object

        { Visibility=Public }
        // Path to the directory that is to be scanned for files.
        Property String psFilePath  ""
        { Visibility=Public }
        // Filename extention to scan for.
        Property String psExtension "*.msstyles;*.cjstyles"
        { Visibility=Public }
        // This is the default value in a filled combo.
        // I.e. If you have a previously selected value from the
        // combo and you want the combo to have this value selected
        // when the combo is initialized, set this property.
        Property String psDefaultDataVal ""
        { Visibility=Public }
        Property String psDefaultDataDes ""

        Set Entry_State to False
    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object
        Send DoAddFolderFiles
    End_Procedure

    // Fills the combo with files.
    // It uses the psExtension to know what file extention to search for.
    // Also uses the psFilePath to know which directory to search.
    Procedure DoAddFolderFiles
        Integer iChannel iPos
        String sFilePath sExtension sInputDirMask sDataVal sValue sExtension2

        Send Combo_Delete_Data

        Get Seq_New_Channel to iChannel
        If (iChannel < DF_SEQ_CHANNEL_MIN or iChannel > DF_SEQ_CHANNEL_MAX) Begin
            Send Seq_Release_Channel iChannel
            Procedure_Return
        End

        Get psExtension to sValue
        Move (Pos(";", sValue)) to iPos
        // Do we have two extensions specified, separated with a ';'?
        If (iPos > 0) Begin
            Move (Left(sValue, (iPos -1)))     to sExtension
            Move (Mid(sValue, 100, (iPos +1))) to sExtension2
        End // If (iPos > 0) Begin
        Else Begin
            Move sValue to sExtension
        End

        Get psFilePath to sFilePath
        If (sFilePath = "") Begin
            Procedure_Return
        End

        Move (If(Right(sFilePath, 1) <> "\", (sFilePath + "\"), sFilePath)) to sFilePath

        Move ("DIR:" - sFilePath - sExtension) to sInputDirMask
        // Helper procedure below.
        Send DoReadFolder iChannel sInputDirMask

        If (Length(sExtension2) > 0) Begin
            Move ("DIR:" - sFilePath - sExtension2) to sInputDirMask
            // Helper procedure below.
            Send DoReadFolder iChannel sInputDirMask
        End // If (Length(sExtension2) > 0) Begin

        Close_Input channel iChannel
        Send Seq_Release_Channel iChannel

        // Remove the two files "Classes" and "ClassReference"
        Get Combo_Item_Matching "Classes" to iPos
        If (iPos>=0) Begin
            Send Combo_Delete_Item iPos
        End
        Get Combo_Item_Matching "ClassReference" to iPos
        If (iPos>=0) Begin
            Send Combo_Delete_Item iPos
        End

        Get psDefaultDataVal to sDataVal
        If (sDataVal <> "") Begin
            Set Value to sDataVal
        End
    End_Procedure

    // Helper procedure for the DoAddFolderFiles message.
    // Takes a direct_input channel and a input directory mask
    // as parameters.
    // Adds all found files to the combolist.
    Procedure DoReadFolder Integer iChannel String sInputDirMask
        String sDataVal sDesc
        Integer iPos

        Direct_Input channel iChannel sInputDirMask
        While (not(SeqEof))
            Readln channel iChannel sDataVal
            If (not(SeqEof) and Left(sDataVal, 1) <> "[") Begin
                Get ParseFileExtension sDataVal  to sDesc
                Move (Pos(sDesc, sDataVal))      to iPos
                Move (Left(sDataVal, (iPos -1))) to sDesc
                Send Combo_Add_Item sDesc sDataVal
            End
        End

    End_Procedure

End_Class
