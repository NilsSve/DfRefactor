//****************************************************************************
// $Module type: Class
// $Module name: cReadDirDescriptionValidationTable.pkg
// $Author     : Nils G. Svedmyr, RDC Tools International
// Created     : 2007-09-12 @ 21:55
//
// Description : A validation table class that dynamically reads the
//               file content of a folder and populate the list
//               list whith those files during object creation.
//
//               It will _not_ search subfolders.
//
//               The psExtension property can handle two values, if
//               separated with a semicolon (;) e.g. "*.msstyles;*.cjstyles"
//
// $Rev History:
//    2008-03-06  Module header created
//****************************************************************************
Use Windows.pkg
Use Ddvaltbl.pkg
Use Seq_Chnl.pkg
Use vWin32fh.pkg

// Special case for the CodeSpy project. We will remove these files from the list, as
// they are the filenames that will be replaced with the selected stylesheet file.
Define CS_Classes_css         for "classes.css"
Define CS_ClassReferences_css for "classreference.css"

Class cRDCReadDirDescriptionValidationTable is a DescriptionValidationTable
    Procedure Construct_Object
        Forward Send Construct_Object

        { Visibility=Public }
        // Path to the directory that is to be scanned for files.
        Property String psFilePath       ""
        { Visibility=Public }
        // Filename extention to scan for.
        Property String psExtension      "*.css"
        { Visibility=Public }
        // This is the default value in a filled list.
        Property String psDefaultDataVal ""
        { Visibility=Public }
        Property String psDefaultDataDes ""

    End_Procedure

    Procedure End_Construct_Object
        Forward Send End_Construct_Object
    End_Procedure

    // Fills the list with files.
    // It uses the psExtension to know what file extention to search for.
    // Also uses the psFilePath to know which directory to search.
    Procedure Fill_List
        Integer iChannel iPos
        String sFilePath sExtension sInputDirMask sDataVal sValue sExtension2

        Send Delete_Data

        Get Seq_New_Channel to iChannel
        If (iChannel < DF_SEQ_CHANNEL_MIN or iChannel > DF_SEQ_CHANNEL_MAX) Begin
            Send Seq_Release_Channel iChannel
            Procedure_Return
        End

        Get psExtension to sValue
        Move (Pos(";", sValue)) to iPos
        // Do we have two extensions specified, separated with a ';'?
        If (iPos > 0) Begin
            Move (Left(sValue, (iPos -1)))     to sExtension
            Move (Mid(sValue, 100, (iPos +1))) to sExtension2
        End
        Else Begin
            Move sValue to sExtension
        End

        Get psFilePath to sFilePath
        If (sFilePath = "") Begin
            Procedure_Return
        End

        Get vFolderFormat sFilePath to sFilePath

        Move ("DIR:" - sFilePath - sExtension) to sInputDirMask
        // Helper procedure below.
        Send DoReadFolder iChannel sInputDirMask

        If (Length(sExtension2) > 0) Begin
            Move ("DIR:" - sFilePath - sExtension2) to sInputDirMask
            // Helper procedure below.
            Send DoReadFolder iChannel sInputDirMask
        End

        Close_Input channel iChannel
        Send Seq_Release_Channel iChannel

        Get psDefaultDataVal to sDataVal
        If (sDataVal <> "") Begin
            Set Value to sDataVal
        End

    End_Procedure

    // Helper procedure for the DoAddFolderFiles message.
    // Takes a direct_input channel and a input directory mask
    // as parameters.
    // Adds all found files to the combolist.
    Procedure DoReadFolder Integer iChannel String sInputDirMask
        String sDataVal sDesc

        Direct_Input channel iChannel sInputDirMask
        While (not(SeqEof))
            Readln channel iChannel sDataVal
            If (not(SeqEof) and Left(sDataVal, 1) <> "[") Begin
                Get ParseFileExtension sDataVal to sDesc
                Move (Replace(("." + sDesc), sDataVal, "")) to sDesc
                // Special for the CodeSpy project. We don't want these files in the list as they
                // are not .css files that can be used.
                If (Lowercase(sDataVal) <> CS_Classes_css and Lowercase(sDataVal) <> CS_ClassReferences_css) Begin
                    Send Add_Table_Value sDataVal sDesc
                End
            End
        End

    End_Procedure

    Function Code_Value_Index String sCode Returns Integer
        Integer iItems iCount iRetval
        String sListCode sExtension

        Move -1 to iRetval
        Get psExtension to sExtension
        Move (Replace("*", sExtension, "")) to sExtension
        Move (sCode + sExtension) to sCode
        Get psExtension to sExtension
        Get Data_Item_Count to iItems
        Decrement iItems

        For iCount from 0 to iItems
            Get Data_Value iCount to sListCode
            If (Lowercase(sCode) = Lowercase(sListCode)) Begin
                Move iCount to iRetval
            End
        Loop

        Function_Return iRetval
    End_Function

End_Class
