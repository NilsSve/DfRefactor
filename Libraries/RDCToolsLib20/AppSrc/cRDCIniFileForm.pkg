//****************************************************************************
// $Module type: Class
// $Module name: cRDCIniFileForm.pkg
// $Author     : Nils G. Svedmyr, RDC Tools International, <support@rdctools.com>
// Created     : 2013-07-07 @ 12:46
//
// Description : Form class that reads/writes to an .ini file.
//
//               To read values from .ini file to a cIniFileForm object, simply
//               send ReadIniValue to the object - or to write the value back
//               to the .ini file; WriteIniValue.
//
//               The class automatically reads from the .ini file when the object
//               is created.
//
//               To write all cIniFileForm objects in a container (dbView) send;
//                  Broadcast recursive send WriteIniValue of (some_container_name(self))
//               Typically this is done in a Save button's OnClick event.
//
// $Rev History:
//    2013-07-07  Module header created
//****************************************************************************
Use Windows.pkg
Use vWin32fh.pkg
Use cRDCProjectIniFile.pkg

// Text Constants:
// English:
Define CS_PromptFileHeaderText   for "Select a file"
Define CS_PromptFolderHeaderText for "Select a folder"
Define CS_WarningFileMissingText for "Warning: The file is missing!"
Define CS_FileText               for "file"
Define CS_FolderText             for "folder"
// Swedish:
//Define CS_PromptFileHeaderText   for "V„lj en fil"
//Define CS_PromptFolderHeaderText for "V„lj en katalog"
//Define CS_WarningFileMissingText for "Varning: Filen saknas!"
//Define CS_FileText               for "fil"
//Define CS_FolderText             for "katalog"

{ OverrideProperty = Label_Justification_Mode InitialValue = JMode_Right }
Class cRDCIniFileForm is a Form

    Procedure Construct_Object
        Forward Send Construct_Object

        Property Handle phoIniFileObject ghoProjectIniFile // Global handle defined in cProjectInifile.pkg

        // Properties to be set in each cIniFileForm object:
        Property String  psSection                (psSectionName(ghoProjectIniFile))
        Property String  psKey                    ""
        Property String  psDefault                ""
        Property String  psFileMask               "All Files|*.*"
        Property String  psPromptFileHeaderText   CS_PromptFileHeaderText
        Property String  psPromptFolderHeaderText CS_PromptFolderHeaderText
        Property Boolean pbWriteImmediately       False
        Property Boolean pbFileValue              False
        Property Boolean pbFolderValue            False
        Property Boolean pbReadState              False

        Set Label_Col_Offset to 2
        Set Label_Justification_Mode to JMode_Right
        Set Prompt_Button_Mode to PB_PromptOn

#IF (Required_FMAC_Version < 17)
        Set Typeface to "Segoe UI"
        Set FontSize to 18 0
#ENDIF
    End_Procedure

    Procedure End_Construct_Object
        Boolean bFileValue bFolderValue
        Integer iMode
        Forward Send End_Construct_Object

#IF (Required_FMAC_Version >= 16)
        If (psToolTip(Self) = "") Begin
            Set psToolTip to (Status_Help(Self))
        End
#ENDIF
        // Auto-fill form value from the ini-file at startup.
        Send ReadIniValue

        // If the form should be used to browse for files or folders,
        // set the prompt_button_mode = ON.
        Get pbFileValue   to bFileValue
        Get pbFolderValue to bFolderValue
        If (bFileValue = True or bFolderValue = True) Begin
            Get Prompt_Button_Mode to iMode
            If (iMode <> PB_PromptOff) Begin
                Set Prompt_Button_Mode to PB_PromptOn
            End
        End
        Else Begin
            Set Prompt_Button_Mode to PB_PromptOff
        End

        Send OnCreate
    End_Procedure

    // Hook event.
    Procedure OnCreate

    End_Procedure

    Procedure ReadIniValue
        Handle ho
        String sSection sKey sDefault sValue

        Set pbReadState      to True
        Get phoIniFileObject to ho
        Get psSection        to sSection
        Get psKey            to sKey
        Get psDefault        to sDefault

        Get IniFileValue  of ho sSection sKey sDefault to sValue
        Set Value            to sValue
        Set pbReadState      to False
    End_Procedure

    Procedure WriteIniValue
        Handle ho
        String sSection sKey sValue

        Get phoIniFileObject to ho
        Get psSection        to sSection
        Get psKey            to sKey
        Get Value            to sValue

        Set IniFileValue of ho sSection sKey to sValue
    End_Procedure

    Procedure Prompt
        String sTitle sCurrentValue sValue sFileMask
        Boolean bFileValue bFolderValue

        Get pbFileValue        to bFileValue
        Get pbFolderValue      to bFolderValue
        Get psFileMask         to sFileMask

        Get Value              to sCurrentValue
        Get ParseFolderName sCurrentValue to sCurrentValue

        If (bFileValue = True) Begin
            Get psPromptFileHeaderText to sTitle
            Get vSelect_File sFileMask sTitle sCurrentValue to sValue
        End

        Else If (bFolderValue = True) Begin
            Get psPromptFolderHeaderText to sTitle
            Get vSHBrowseForFolder sTitle to sValue
        End
        If (sValue <> "") Begin
            Set Value to sValue
        End
    End_Procedure

    Procedure OnChange
        Boolean bWriteImmediately
        Boolean bExists bFileValue bFolderValue
        String sValue

        Get pbWriteImmediately to bWriteImmediately
        If (bWriteImmediately = True) Begin
            Send WriteIniValue
        End

        Get Value            to sValue
        Get pbFileValue      to bFileValue
        Get pbFolderValue    to bFolderValue
        If (bFileValue = True) Begin
            Get vFilePathExists sValue to bExists
        End
        Else If (bFolderValue = True) Begin
            Get vFolderExists sValue to bExists
        End

        // If either the file or folder doesn't exist change the form text to red, to denote it is missing.
        If (bFileValue = True or bFolderValue = True and bExists = False) Begin
            Set TextColor to clRed
        End
        Else Begin
            Set TextColor to clBlack
        End
    End_Procedure

    Function psToolTip Returns String
        String sRetval sMissingText
        Boolean bFileValue bFolderValue
        Integer iColor

        Forward Get psToolTip to sRetval

        Get pbFileValue   to bFileValue
        Get pbFolderValue to bFolderValue
        If (bFileValue = True or bFolderValue = True) Begin
            Get TextColor to iColor
            If (iColor = clRed) Begin
                Move CS_WarningFileMissingText to sMissingText
                If (bFolderValue = True) Begin
                    // Replace the "file" word with the "folder" word.
                    Move (Replace(CS_FileText, sMissingText, CS_FolderText)) to sMissingText
                End
                Move (sRetval * sMissingText) to sRetval
            End
        End

        Function_Return sRetval
    End_Function

End_Class
