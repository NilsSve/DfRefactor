Use cRichEdit.pkg

Class cDFUnitResultList is a cRichEdit
    Procedure Construct_Object
        Forward Send Construct_Object
        Set Focus_Mode to NonFocusable
    End_Procedure
    
    Procedure SetRunningColor
        Set Color to clGray
    End_Procedure
    
    Procedure OnExecute
        Send SetRunningColor
    End_Procedure
    
    Procedure SetSuccessColor
        Set Color to clLime
    End_Procedure
    
    Procedure SetWarningColor
        Set Color to clYellow
    End_Procedure
    
    Procedure SetFailedColor
        Set Color to clRed
    End_Procedure
    
    Procedure OnFail
        Send SetFailedColor
    End_Procedure
    
    Procedure OnSuccess
        Send SetSuccessColor
    End_Procedure
    
    Function TestResultOutputString Handle hResult Returns String
        String sResult sSuccess
        If (psSuccess(hResult) = "True") Move "" to sSuccess
        Else Move "*** FAILED ***" to sSuccess
        Move ("[" + FormatNumber(Number(SpanTotalMilliSeconds(pTime(hResult)))/1000, 3) + "]" * sSuccess * psName(hResult)) to sResult
        Function_Return sResult
    End_Function
    
    Procedure StartTestResults
    End_Procedure
    
    Procedure EndTestResults
    End_Procedure
    
    Procedure OutputTestResult Handle hResult Integer iIndentation
        String sResult
        Get TestResultOutputString hResult iIndentation to sResult
        Move (Pad("", iIndentation * 4) + sResult) to sResult
        Integer iStart iEnd
        String sValue
        Send Select_All
        Get SelText to sValue
        Move (Length(sValue)) to iStart
        Send AppendTextLn (Replaces("_", sResult, " "))
        Boolean bFailed
        Move (Pos("*** FAILED ***", sResult) > 0) to bFailed
        If (not(bFailed)) Procedure_Return
        Send Select_All
        Get SelText to sValue
        Move (Length(sValue)) to iEnd
        Send SetSel iStart iEnd
        Set pbBold to bFailed
        Send SetSel 0 0
    End_Procedure
    
    Procedure OutputTestResults Handle hTestFixture Integer iIndentation
        Handle hTestCatalog hTest
        Get phTestCatalog of hTestFixture to hTestCatalog
        Send IteratorReset to hTestCatalog
        While (IteratorMoveNext(hTestCatalog))
            Get CurrentTest of hTestCatalog to hTest
            Send OutputTestResult (oTestResult(hTest)) iIndentation
        Loop
    End_Procedure
    
    Procedure OutputTestFixtureResult Handle hTestFixture Integer iIndentation
        Handle hResult
        Move (oTestFixtureResult(hTestFixture)) to hResult
        Send OutputTestResult hResult iIndentation
        Send OutputTestResults hTestFixture (iIndentation + 1)
    End_Procedure
    
    Procedure OutputTestFixture Handle hTestFixture Integer iIndentation
        Send OutputTestFixtureResult hTestFixture iIndentation
        Send OutputTestFixtureCatalog (oTestFixtureCatalog(hTestFixture)) (iIndentation + 1)
    End_Procedure
    
    Procedure OutputTestFixtureCatalog Handle hTestFixtureCatalog Integer iIndentation
        Integer iIndentation_
        If (num_arguments >= 2) Move iIndentation to iIndentation_
        Send IteratorReset to hTestFixtureCatalog
        While (IteratorMoveNext(hTestFixtureCatalog))
            Send OutputTestFixture (CurrentTestFixture(hTestFixtureCatalog)) iIndentation_
        Loop
    End_Procedure
    
    Procedure OutputResults Handle hTestFixtureCatalog
        Send StartTestResults
        Send Delete_Data
        Send OutputTestFixtureCatalog hTestFixtureCatalog
        Send EndTestResults
    End_Procedure
    
    Procedure OnExecuteFinished
    End_Procedure
End_Class