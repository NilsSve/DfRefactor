Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg
Use vWin32fh.pkg
Use cCJSkinFramework.pkg
Use cCJCommandBarSystem.pkg                      
Use cSQLConnectionIniFile.pkg

Object oHtmlHelp is a cHtmlHelp
    Set pbAlwaysOnTop to False
End_Object

Object oApplication is a cApplication
    Set peHelpType to htHtmlHelp
    Set psHelpFile to "Developer5.chm"
    Set psCompany to "RDC Tools International"
    Set psProduct to "DUF - SQL Connections Manager"
    Set psVersion to (String(piVersionMajor(phoVersionInfo(Self))) + "." + String(piVersionMinor(phoVersionInfo(Self))))
    Set psAutoOpenWorkspace to ""

    Property String psCommandLineIniFilePath ""
    Property Boolean pbIniFileExists False     
    Property Handle phoMainView 0

    Property String psCompileDateAndTime
    // This is used by the About object to display the compile date & time:
    Include_Resource CompileHeader.h as res_CompileHeader type DF_RESOURCE_TYPE_LINE
        
    // If the folder contains exactly one workspace file (*.ws), it will be
    // returned. Else an empty string ("") will be returned.
    Function FindWorkspaceFile String sPath Returns String
        String sSingleWorkspaceFile
        Handle hoSQLIniFile                  
        String[] aWsFiles
        Integer iSize
        
        Get Create (RefClass(cSQLConnectionIniFile)) to hoSQLIniFile
        Get WorkspaceIniFiles of hoSQLIniFile sPath to aWsFiles
        Move (SizeOfArray(aWsFiles)) to iSize
        If (iSize = 1) Begin
            Move aWsFiles[0] to sSingleWorkspaceFile
        End                    
        Else Begin
            Move "" to sSingleWorkspaceFile
        End
        Send Destroy of hoSQLIniFile      
        Function_Return sSingleWorkspaceFile
    End_Function

    Procedure OnCreate
        Integer eOpened
        Handle hoCmdLine
        String sArgument sPath sFileName sWsFile
        Integer iRetval
        Boolean bExists

        Get phoCommandLine to hoCmdLine
        Get Argument of hoCmdLine 1 to sArgument
        If (sArgument <> "") Begin
            Get ParseFolderName sArgument to sPath
            Get vFolderExists sPath to iRetval
            If (iRetval = True) Begin
                Set psCommandLineIniFilePath to sPath
                Get vFilePathExists (sPath + CS_SQLIniFileName) to bExists
                Set pbIniFileExists to bExists
            End
        End

        Get OpenWorkspaceFile of (phoWorkspace(Self)) "config.ws" to eOpened
        If (eOpened <> wsWorkspaceOpened) Begin
            Get GetApplicationPath to sPath     
            Get FindWorkspaceFile sPath to sWsFile
            If (sWsFile = "") Begin
                Get vSelect_File "Workspace Files (*.ws)|*.ws|All Files (*.*)|*.*" "Please select a Workspace file (*.ws)" sPath to sWsFile
                Get vFilePathExists sWsFile to bExists
                If (bExists = False) Begin
                    Send Stop_Box "No Workspace file selected. Cannot continue!"
                    Send Exit_Application
                End
            End
            Get OpenWorkspaceFile of (phoWorkspace(Self)) sWsFile to eOpened
            If (eOpened <> wsWorkspaceOpened) Begin
                Set psHome          of (phoWorkspace(Self)) to sPath
                Set psProgramPath   of (phoWorkspace(Self)) to sPath
                Set psDataPath      of (phoWorkspace(Self)) to sPath
                Set psFileList      of (phoWorkspace(Self)) to sPath
                Set psHelpPath      of (phoWorkspace(Self)) to sPath
                Set psBitmapPath    of (phoWorkspace(Self)) to sPath
            End
        End
    End_Procedure  
    
    #IFDEF cConnection
    Object oConnection is a cConnection
        Use LoginEncryption.pkg
        Use DatabaseLoginDialog.dg
    End_Object
    #ENDIF

    Procedure End_Construct_Object
        String sCompileTime  
        Integer iPos
        
        Forward Send End_Construct_Object
        Direct_Input "resource: res_CompileHeader"
        Readln sCompileTime
        Move (Pos('"', sCompileTime)) to iPos
        If (iPos <> 0) Begin
            Move (Mid(sCompileTime, Length(sCompileTime), (iPos + 1))) to sCompileTime
            Move (Replaces('"', sCompileTime, '')) to sCompileTime
            Set psCompileDateAndTime to sCompileTime
        End
        Close_Input
    End_Procedure

End_Object

Use cDbUpdateFunctionLibrary.pkg
// Needs to be after the cSQLConnectionHandler Object
Object oDbUpdateFunctionLibrary is a cDbUpdateFunctionLibrary
End_Object

Use cSQLConnectionHandler.pkg
Object oSQLConnectionHandler is a cSQLConnectionHandler
    // If a file was passed on the command line - which can be done from the Studio -
    // we change the ini-file path here. (The file name is always the same)
    Procedure End_Construct_Object
        String sPath
        Boolean bExists
        Get psCommandLineIniFilePath of ghoApplication to sPath
        If (sPath <> "") Begin
            Set psIniFilePath to sPath
        End
        Else Begin
            Get psProgramPath of (phoWorkspace(ghoApplication)) to sPath
            Set psIniFilePath to sPath
            Get vFolderFormat sPath to sPath
            Get vFilePathExists (sPath + CS_SQLIniFileName) to bExists
            Set pbIniFileExists of ghoApplication to bExists
        End
        Forward Send End_Construct_Object
    End_Procedure
End_Object

Object oToolTipController is a cToolTipController
    Move Self to ghoToolTipController
    Set pbBalloonStyle to False
    Set piIcon to TTI_INFO
    Set psTitle to "Information"
    Set piMaxWidth to 400
    Set piDurationPopup to 14000    // 14 seconds, needed for long tooltips.
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu17.pkg

Object oMain is a Panel
    Set Label to (psProduct(ghoApplication))
    Set Location to 30 17
    Set Size to 190 450
    Set Icon to "SQLConnections1.ico"
    Set piMinSize to (Hi(Size(Self))) (Low(Size(Self)))

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True
        Set pbShowTextBelowIcons to True
        Set pbAutoResizeIcons to True
        Set pbLargeIcons to True

        Procedure OnCreateCommandBars
            Handle hoOptions
            Integer iSize

            Send DoChangeToolTipFormat

            Get OptionsObject to hoOptions
            Move 32 to iSize
            Send ComSetIconSize of hoOptions False iSize iSize  // Set icon size for Toolbar buttons.
            Forward Send OnCreateCommandBars
        End_Procedure

        Procedure DoChangeToolTipFormat
            Variant vToolTip
            Handle  hoObject
            Integer eTheme iToolTipStyle
            Boolean bIsBalloonStyleSupported

            Get ComToolTipContext to vTooltip
            Get Create (RefClass(cCJToolTipContext)) to hoObject
            Set pvComObject of hoObject to vTooltip
            Move xtpToolTipStandard to iToolTipStyle
            If (iToolTipStyle = -1) Begin
                Get peVisualTheme to eTheme
                Set ComStyle of hoObject to eTheme
            End
            Else Begin
                // Baloon tooltip style requires IE 5.0 or later, so check if installed.
                // The ComShowTitleAndDescription also requires IE 5.0.
                Get ComIsBalloonStyleSupported of hoObject to bIsBalloonStyleSupported
                If (bIsBalloonStyleSupported = False) Begin
                    // If not supported we cannot show baloon tooltip; use standard style instead.
                    If (iToolTipStyle = xtpToolTipBalloon) Begin
                        Move xtpToolTipStandard to iToolTipStyle
                    End
                End
                Set ComStyle of hoObject to iToolTipStyle
                If (bIsBalloonStyleSupported = True) Begin
                    Send ComShowTitleAndDescription of hoObject True xtpToolTipIconInfo
                End
            End
            Set  ComShowOfficeBorder        of hoObject to True
            Set  ComShowShadow              of hoObject to True
            // Set the max width for a tooltip. 250 just seems to be a good
            // compromise. After 250 pixels the text will wrap to the next line automatically.
            Set  ComMaxTipWidth             of hoObject to 250 // In pixels
            Send Destroy of hoObject
            If (phoStatusBar(ghoCommandBars)) Begin
                Send DoChangeToolTipFormat of (phoStatusBar(Self))
            End

        End_Procedure

        Object oOpen_Toolbar is a cCJToolbar     

            Object oOpen_MenuItem is a cCJMenuItem
                Set psTooltip to "&Open"
                Set psDescription to "Open connection ini-file (Ctrl+O)"
                Set psImage to "ActionOpen1.ico"
                Set pbActiveUpdate to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send ActivateOpenDialog of (phoMainView(ghoApplication))
                End_Procedure
            End_Object

            Object oRefreshMenuItem is a cCJMenuItem
                Set psTooltip to "&Refresh"
                Set psDescription to "Refresh grid - re-read values from ini-file (Alt+R)"
                Set psImage to "ActionRefresh1.ico"
                Set pbActiveUpdate to True
               
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send RefreshIniFile of (phoMainView(ghoApplication))
                End_Procedure

                Function IsEnabled Returns Boolean
                    Boolean bSave
                    Get Should_Save of (oSQLConnections_grd(phoMainView(ghoApplication))) to bSave
                    Function_Return (bSave = True)
                End_Function
                
            End_Object

        End_Object

        Object oEdit_Toolbar is a cCJToolbar     
        
            Object oAddMenuItem is a cCJMenuItem
                Set psTooltip to "&Add"
                Set psDescription to "Add new connection (Alt+A)"
                Set psImage to "ActionAdd1.ico"
                Set pbActiveUpdate to True
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send AddItem of (phoMainView(ghoApplication))
                End_Procedure
            End_Object

            Object oEditMenuItem is a cCJMenuItem
                Set psTooltip to "&Edit"
                Set psDescription to "Edit selected connection (Alt+E)"
                Set psImage to "ActionEdit1.ico"
                Set pbActiveUpdate to True

                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send EditItem of (phoMainView(ghoApplication))
                End_Procedure

                Function IsEnabled Returns Boolean
                    Handle ho              
                    Boolean bRecord
                    Move (oSQLConnections_grd(phoMainView(ghoApplication))) to ho
                    Send ChangeHeaderText of ho
                    Get HasRecord of ho to bRecord
                    Function_Return (bRecord = True)
                End_Function

            End_Object

            Object oSaveMenuItem is a cCJMenuItem
                Set psTooltip to "Save"
                Set psDescription to "Save changes (Ctrl+S)"
                Set psImage to "ActionSave1.ico"
                Set pbActiveUpdate to True
                Set peControlType to xtpControlSplitButtonPopup

                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send SaveIniFile of (phoMainView(ghoApplication))
                End_Procedure

                Function IsEnabled Returns Boolean
                    Boolean bSave
                    Get Should_Save of (oSQLConnections_grd(phoMainView(ghoApplication))) to bSave
                    Function_Return (bSave = True)
                End_Function

                Object oSaveAsMenuItem is a cCJMenuItem
                    Set psTooltip to "Save As"
                    Set psDescription to "Save configuration file as..."  
                    Set psImage to "ActionSaveAs1.ico"
                    
                    Procedure OnExecute Variant vCommandBarControl  
                        String sPath sIniFileName sFileName

                        Forward Send OnExecute vCommandBarControl
                        
                        Get psIniFilePath of ghoSQLConnectionHandler to sPath
                        Get psIniFileName of ghoSQLConnectionHandler to sIniFileName
                        Get vSelectSaveFile ".int" "Please enter a file name to save to" sPath sIniFileName to sFileName
                        If (sFileName <> "") Begin
                            Get ParseFolderName sFileName to sPath
                            Get ParseFileName   sFileName to sIniFileName
                            Set psIniFilePath of ghoSQLConnectionHandler to sPath
                            Set psIniFileName of ghoSQLConnectionHandler to sIniFileName
                            Send SaveIniFile  of (phoMainView(ghoApplication))
                        End
                    End_Procedure

                End_Object   
                
            End_Object

            Object oClearMenuItem is a cCJMenuItem 
                Set psTooltip to "Clear All"
                Set psDescription to "Clear ini-file (Ctrl+F5)"
                Set psImage to "ActionClear1.ico"
                Set pbActiveUpdate to True
                
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl   
                    Send ClearIniFile of (phoMainView(ghoApplication))
                End_Procedure   
                
                Function IsEnabled Returns Boolean
                    Handle ho              
                    Boolean bRecord
                    Move (oSQLConnections_grd(phoMainView(ghoApplication))) to ho
                    Send ChangeHeaderText of ho
                    Get HasRecord of ho to bRecord
                    Function_Return (bRecord = True)
                End_Function

            End_Object
    
            Object oDeleteMenuItem is a cCJMenuItem
                Set psTooltip to "Delete"
                Set psDescription to "Delete selected connection (Alt+D)"
                Set psImage to "ActionDelete1.ico"
                Set pbActiveUpdate to True

                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send DeleteItem of (phoMainView(ghoApplication))
                End_Procedure   
                
                Function IsEnabled Returns Boolean
                    Handle ho              
                    Boolean bRecord
                    Move (oSQLConnections_grd(phoMainView(ghoApplication))) to ho
                    Send ChangeHeaderText of ho
                    Get HasRecord of ho to bRecord
                    Function_Return (bRecord = True)
                End_Function

            End_Object

        End_Object      
        
        Object oExit_Toolbar is a cCJToolbar
            Set peStretched to stStretchShared

            Object oAddToStudioMenuItem is a cCJMenuItem
                Set psTooltip to "Add to Studio"
                Set psDescription to "Add program to the Studio's toolbar menu"
                Set psImage to "ActionAddStudio1.ico"
                
                Procedure OnExecute Variant vCommandBarControl
                    Forward Send OnExecute vCommandBarControl
                    Send Popup of (oAddToStudio_dg(Client_Id(phoMainPanel(ghoApplication))))
                End_Procedure
            
            End_Object

            Object oAbout_MenuItem is a cCJMenuItem
                Set psTooltip to C_$About
                Set psDescription to "Info about the program..."
                Set psImage to "ActionAbout1.ico"
        
                Procedure OnExecute Variant vCommandBarControl
                    Send ChangeStatusRowText of (phoMainView(ghoApplication)) ""
                    Send Activate_About of (Client_Id(phoMainPanel(ghoApplication)))
                End_Procedure
        
            End_Object     
            
            Object oHelpMenuItem is a cCJHelpMenuItem
                Set peControlType to xtpControlSplitButtonPopup
                Set psToolTip to C_$Help
                Set psDescription to "Local HTML Help"
                Set psImage to "ActionHelp1.ico"

                Procedure OnExecute Variant vCommandBarControl
                    Send ShowProgramHelp
                End_Procedure

                Object oHelpMenuItemLocal is a cCJMenuItem
                    Set psToolTip to C_$Help
                    Set psCaption to "Local HTML Help"
                    Set psDescription to "Local HTML Help"
                    Set psImage to "ActionHelp1.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Send ShowProgramHelp
                    End_Procedure
                End_Object

                Object oHelpMenuItemInternetBrowser is a cCJMenuItem
                    Set psToolTip to C_$Help
                    Set psCaption to "Online HTML Help"
                    Set psDescription to "Online HTML Help"
                    Set psImage to "ActionHelpInternet1.ico"
                    Procedure OnExecute Variant vCommandBarControl
                        Runprogram Shell Background "https://www.rdctools.com/HTMLHelpDUF/DUFSQLConnectionsTool.html"
                    End_Procedure
                End_Object

                Object oCheckforUpdatesMenuItem is a cCJMenuItem
                    Set psToolTip to "Updates"
                    Set psCaption to "Check for Updates..."
                    Set psDescription to "Check for Updates..."
                    Set psImage to "InternetUpdate1.ico"
                    Set pbControlBeginGroup to True
                    
                    Procedure OnExecute Variant vCommandBarControl
                        String sPath sUpdateProgram sParam
                        Get psProgramPath of (phoWorkspace(ghoApplication)) to sPath
                        Get vFolderFormat sPath to sPath
                        Move "updater.exe" to sUpdateProgram
                        Move "/checknow"   to sParam
                        Runprogram Shell Wait ('"' + sPath + sUpdateProgram + '"') sParam
                    End_Procedure
                
                End_Object
                
            End_Object

            Object oExit_MenuItem is a cCJExitMenuItem
                Set psToolTip to "Exit"
                Set psDescription to "Exit application (Alt+F4)"   
                Set psImage to "ActionExit1.ico"
            End_Object

        End_Object
        
        Object oStatusBar is a cCJStatusBar

            Object oStatusPane1 is a cCJStatusBarPane
                Set pbStyleStretch to True
            End_Object

            Object oStatusPane2 is a cCJStatusBarPane
                Set phoViewPane to Self
                Set pbStyleStretch to True
                Set piTextColor to clRed
            End_Object

        End_Object

    End_Object

    Object oClientArea is a ClientArea
        Use StdAbout.pkg
        Use ManageSQLConnections.vw
        Use ManageSQLConnections.dg
        Use AddToStudio.dg
        Use CreateDatabase.dg

        Procedure Activate_About
            Send DoAbout "" "" ("Copyright 2016-2023" * psCompany(ghoApplication)) "Author: Nils Svedmyr" "SQLConnections.bmp" "E-mail: mailto:support@rdctools.com" "Web-site: www.rdctools.com" ("This tool was created with DataFlex" * String(C_DFVersion) * "from Data Access Worldwide. Please visit http://www.dataaccess.com for a free personal copy of DataFlex.")
        End_Procedure

    End_Object

    Procedure ShowProgramHelp
        Send DoDisplayKeyword of ghoHtmlHelp "SQLConnections Tool"
    End_Procedure

    On_Key Key_F1 Send ShowProgramHelp
End_Object

// Check if a SQLConnections.ini file exists;
// else the user needs to setup a Connection ID and login info & save the new connection file.
Procedure CheckIfConnectionExists
    Boolean bIniFileExists
    Get pbIniFileExists of ghoApplication to bIniFileExists
    If (bIniFileExists = False) Begin
        Send ConnectionDoesNotExist of (oSQLMaintainConnection(Client_Id(phoMainPanel(ghoApplication))))
    End
End_Procedure
Send CheckIfConnectionExists

Start_UI
