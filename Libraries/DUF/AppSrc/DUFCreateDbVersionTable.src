Use DfAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg
Use Dfspnfrm.pkg
Use Dfcursor.pkg
Use Dfline.pkg
Use vWin32fh.pkg

Object oHtmlHelp is a cHtmlHelp
End_Object

Object oApplication is a cApplication
    Set peHelpType to htHtmlHelp
    Set psCompany to "RDC Tools International"
    Set psProduct to "The Database Update Framework - Create DbVersion Table"
    Set psHelpFile to "Developer5.chm"
    Set psAutoOpenWorkspace to ""

    Property String psFilelistName
    Property String psOpenPath

    Procedure OnCreate
        Handle ho hoIni
        String sSWSFile sWSFile sOpenPath sPath sFilelistname
        Integer eOpened iPos
        Boolean bExists

        Get phoCommandLine to ho
        Get Argument of ho 1 to sSWSFile

        // Was the program started with a parameter on the command line from e.g. the Studio?
        If (sSWSFile <> "") Begin
            Get Create (RefClass(cIniFile)) to hoIni
            Set psFileName of hoIni to sSWSFile
            Get ParseFolderName sSWSFile to sPath

            // Read .ws file path from the .sws file:
            Get ReadString of hoIni "WorkspacePaths" "ConfigFile" "" to sWSFile
            Move (Pos(".\", sWSFile)) to iPos
            If (iPos <> 0) Begin
                Move (Replace(".\", sWSFile, "")) to sWSFile
            End
            Send Destroy of hoIni
            Move (sPath + sWSFile) to sWSFile
            Get vFilePathExists sWSFile to bExists
            If (bExists = True) Begin
                Get OpenWorkspaceFile of (phoWorkspace(Self)) sWSFile to eOpened
                If (eOpened = wsWorkspaceOpened) Begin
                    Set psFilelistName to (psFileList(phoWorkspace(Self)))
                    Procedure_Return // Workspace opened; We're done!
                End
            End
        End

        Get_Attribute DF_OPEN_PATH to sOpenPath
        Set psOpenPath to sOpenPath

        // Check if there is a config.ws file in the Programs folder:
        Get OpenWorkspaceFile of (phoWorkspace(Self)) "config.ws" to eOpened
        If (eOpened = wsWorkspaceOpened) Begin
            Get psFileList of (phoWorkspace(Self)) to sFileListName
            Set psFilelistName to sFileListName
            Procedure_Return         // Workspace opened; We're done!
        End

        // If no config.ws was not found; let user select a .ws file
        Get GetApplicationPath to sPath
        Get vSelect_File "Workspace Files (*.ws)|*.ws|All Files (*.*)|*.*" "Please select a Workspace file (*.ws)" sPath to sWsFile
        Get vFilePathExists sWsFile to bExists
        If (bExists = False) Begin
            Send Stop_Box "No Workspace file selected. Cannot continue!"
            Send Exit_Application
        End
        Get OpenWorkspaceFile of (phoWorkspace(Self)) sWsFile to eOpened
        If (eOpened = wsWorkspaceOpened) Begin
            Get psFileList of (phoWorkspace(Self)) to sFileListName
            Set psFilelistName to sFileListName
            Procedure_Return
        End
        Else Begin
            Send Stop_Box "Could not open the Workspace. Cannot continue!"
            Send Exit_Application
        End

    End_Procedure

End_Object

//Use cCJSkinFramework.pkg
//Object oCJSkinFramework is a cCJSkinFramework
//    Set psSkinFile to "Mac_OSX_Leopard.cjstyles"
//    Set psSkinIni to "NormalLeopard.ini"
//End_Object

Use cToolTipController.pkg
Object oToolTipController is a cToolTipController
    Move Self to ghoToolTipController
    Set pbBalloonStyle to False
    Set piIcon to TTI_INFO
    Set psTitle to "Information"
    Set piMaxWidth to 400
    Set piDurationPopup to 14000    // 14 seconds, needed for long tooltips.
End_Object

Use cDbUpdateFunctionLibrary.pkg
Use AddToStudio.dg
Set psTag of (oAddToStudio_dg(Self)) to CS_RegWorkspace

Object oCreateDbVersionTable_pnl is a BasicPanel
    Set Location to 1 0
    Set Size to 204 398
    Set Locate_Mode to Center_On_Screen
    Set Label to (psProduct(ghoApplication))
    Set Icon to "ActionCreateDatabase1.ico"
    Set pbAcceptDropFiles to True
    Set piMinSize to (Hi(Size(Self))) (Low(Size(Self)))
    Set Maximize_Icon to False

    Property Handle phoDialogCommandbar

    Object oDbUpdateFunctionLibrary is a cDbUpdateFunctionLibrary
    End_Object

    Object oWarning_Do_Not_Use_tb is a TextBox
        Set Auto_Size_State to False
        Set Size to 35 331
        Set Location to 6 27
        Set Label to "You should NOT use this program (From DUF 2.0 and up). The DbVersion table will be automatically created by setting three properties; piDbVersionFileNumber, piDbVersionFieldNumber and pbAutoCreateDbVersionTable properties in the cDbUpdateHandler object!"
        Set Justification_Mode to JMode_Left
        Set FontWeight to fw_Bold
    End_Object

    Object oGeneralInfo_tb is a TextBox
        Set Auto_Size_State to False
        Set Size to 25 342
        Set Location to 47 27
        Set Label to "Utility to create a system table and a column to keep the database update version to be used for the Entry_Item in the cDbUpdateHandler object. There is also a function 'SQLUtilCreateDbVersionTable' for creating it as a SQL table at customer site."
        Set Justification_Mode to JMode_Left
        Set FontItalics to True
    End_Object

    Object oLineControl is a LineControl
        Set Size to 2 374
        Set Location to 75 12
        Set peAnchors to anTopLeftRight
    End_Object

    Object oFileList_fm is a Form
        Set Size to 13 246
        Set Location to 89 27
        Set Label to "Filelist.cfg:     (You can drop a Filelist.cfg here)"
        Set Label_Col_Offset to 0
        Set Label_Justification_Mode to JMode_Top
        Set peAnchors to anTopLeftRight
        Set Enabled_State to False
        Set Label_Row_Offset to 1
        Set FontWeight to fw_Bold

        Procedure Prompt
            String sValue sPath sFilelistName sFileMask
            Get Value to sValue

            Move (Trim(sValue)) to sValue
            If (sValue <> "") Begin
                Get ParseFolderName sValue to sPath
            End

            Move "Filelist.cfg files (*.cfg)|*.cfg" to sFileMask
            Get vSelect_File sFileMask "Please select a Filelist.cfg file" sPath to sFilelistName
            If (sFilelistName <> "") Begin
                Set Value to sFilelistName
            End
        End_Procedure

        Procedure OnChange
            String sFilelistName sPath sOpenPath sDataPath sDdSrcPath sHomeFolder
            Handle hTable
            Boolean bExists

            Get psOpenPath of ghoApplication to sOpenPath
            Get psDataPath of (phoWorkspace(ghoApplication)) to sDataPath
            If (sOpenPath contains sDataPath) Begin
                Move (Replace((sDataPath + "\;"), sOpenPath, "")) to sOpenPath
            End

            Get Value to sFilelistName
            // This might be true if there was no .ws file on startup.
            If (sFilelistName = "") Begin
                Send Prompt
                Procedure_Return
            End
            Get ParseFolderName sFilelistName to sPath
            If (Right(sPath, 1) ="\") Begin
                Move (Left(sPath, Length(sPath) -1)) to sPath
            End
            If (sPath = "") Begin
                Procedure_Return
            End
            Set_Directory sPath

            Set_Attribute DF_OPEN_PATH to (sPath + ";" + sOpenPath)
            Set_Attribute DF_FILELIST_NAME to sFilelistName
            // Change output folder so files are written to the correct Data folder.
            // For some reason the psDataPath isn't used by default by the Structure_End command.

            Set psDataPath of (phoWorkspace(ghoApplication))  to sPath
            Set psFileList of (phoWorkspace(ghoApplication))  to sFilelistName

            // We also need to output the .fd file if in development environment.
            Get psDdSrcPath of (phoWorkspace(ghoApplication)) to sDdSrcPath
            If (not(sOpenPath contains sDdSrcPath)) Begin
                Get ExtractFilePath of (phoWorkspace(ghoApplication)) sPath to sHomeFolder
                Move (Append(sHomeFolder, "DdSrc")) to sDdSrcPath
                Get vFolderExists sDdSrcPath to bExists
                If (bExists = True) Begin
                    Set psDdSrcPath of (phoWorkspace(ghoApplication)) to sDdSrcPath
                End
            End
            Move 0 to hTable
            Get_Attribute DF_FILE_NEXT_EMPTY of hTable to hTable
            Set Value of oTableNo_sf to hTable
        End_Procedure

        Procedure Activating
            String sFilelistName
            Forward Send Activating
            Get psFilelistName of ghoApplication to sFilelistName
            Set Value to sFilelistName
        End_Procedure

    End_Object

    Object oSelect_btn is a Button
        Set Size to 13 61
        Set Location to 89 309
        Set Label to "Select..."
        Set psToolTip to "Select a Filelist.cfg from a Data folder where an embedded DbVersion table should be created."
        Set peAnchors to anTopRight

        Procedure OnClick
            Send Prompt of oFileList_fm
        End_Procedure

    End_Object

    Object oTableName_fm is a Form
        Set Size to 13 100
        Set Location to 125 27
        Set Label to "Table Name:"
        Set Label_Col_Offset to 0
        Set Label_Row_Offset to 1
        Set Label_Justification_Mode to JMode_Top
        Set Enabled_State to False
        Set Value to "DbVersion"
    End_Object

    Object oColumnName_fm is a Form
        Set Size to 13 84
        Set Location to 125 133
        Set Label to "Column Name:"
        Set Label_Col_Offset to 0
        Set Label_Row_Offset to 1
        Set Label_Justification_Mode to JMode_Top
        Set Enabled_State to False
        Set Value to "DatabaseVersion"
    End_Object

    Object oDataType_cf is a ComboForm
        Set Size to 11 63
        Set Location to 125 225
        Set Label to "Data Type:"
        Set Label_Col_Offset to 0
        Set Label_Row_Offset to 1
        Set Label_Justification_Mode to JMode_Top
        Set Entry_State to False
        Set Enabled_State to False

        Procedure Combo_Fill_List
            tColumnType[] ColumnTypeArray
            Integer iSize iCount

            Send Delete_Data
            Get _UtilEnumerateColumnTypes of ghoDbUpdateFunctionLibrary DATAFLEX_ID EN_DbTypeDataFlex to ColumnTypeArray
            Move (SizeOfArray(ColumnTypeArray)) to iSize
            Decrement iSize
            For iCount from 0 to iSize
                Send Combo_Add_Item ColumnTypeArray[iCount].sSQLType
            Loop
            Set Value to "NUMERIC"
            Set Enabled_State of oLength_sf to False
            Set Enabled_State of oDecimals_sf to False
            Set Value of oLength_sf   to 4
            Set Value of oDecimals_sf to 2
        End_Procedure

        Procedure OnChange
            Integer iDataType iSize iDec
            Boolean bFixed

            Get SelectedType to iDataType
            Get UtilColumnTypePrecisionSize of ghoDbUpdateFunctionLibrary DATAFLEX_ID EN_DbTypeDataFlex iDataType to iSize
            Get UtilColumnTypePrecisionDec  of ghoDbUpdateFunctionLibrary DATAFLEX_ID EN_DbTypeDataFlex iDataType to iDec
            Get UtilColumnTypeFixed         of ghoDbUpdateFunctionLibrary DATAFLEX_ID EN_DbTypeDataFlex iDataType to bFixed
            Set Enabled_State of oLength_sf   to (bFixed = False)
            Set Enabled_State of oDecimals_sf to (bFixed = False)
            Set Value of oLength_sf to iSize
            If (iDec = 0) Begin
                Set Value of oDecimals_sf to ""
            End
            Else Begin
                Set Value of oDecimals_sf to iDec
            End
            If (bFixed = False) Begin
                Set Enabled_State of oDecimals_sf to (iDec <> 0)
            End
        End_Procedure

        Function SelectedType Returns Integer
            String sDataType
            Integer iDataType

            Get Value to sDataType
            Get UtilColumnTypeToInteger of ghoDbUpdateFunctionLibrary DATAFLEX_ID EN_DbTypeDataFlex sDataType to iDataType

            Function_Return iDataType
        End_Function

    End_Object

    Object oLength_sf is a SpinForm
        Set Label to "Length:"
        Set Size to 13 38
        Set Location to 125 297
        Set Label_Col_Offset to 0
        Set Label_Justification_Mode to JMode_Top
        Set Label_Row_Offset to 1
        Set Value to "4"
        Set Maximum_Position to 50
        Set Minimum_Position to 1
        Set Enabled_State to False
    End_Object

    Object oDecimals_sf is a SpinForm
        Set Label to "Decimals:"
        Set Size to 13 33
        Set Location to 125 344
        Set Label_Col_Offset to 0
        Set Label_Justification_Mode to JMode_Top
        Set Label_Row_Offset to 1
        Set Value to "2"
        Set Maximum_Position to 8
        Set Minimum_Position to 1
        Set Enabled_State to False
    End_Object

    Object oTableNo_sf is a SpinForm
        Set Label to "Filelist No:"
        Set psToolTip to "When a new Filelist.cfg is selected, the first free slot number will be shown here."
        Set Size to 13 32
        Set Location to 155 27
        Set Label_Col_Offset to 0
        Set Label_Justification_Mode to JMode_Top
        Set Label_Row_Offset to 1
        Set Value to "2"
        Set Maximum_Position to 4095
        Set Minimum_Position to 1
    End_Object

    Object oFilelistInfo_tb is a TextBox
        Set Size to 9 138
        Set Location to 157 64
        Set Label to "Default is to use the first free Filelist.cfg slot"
    End_Object

    Object oUseDefaults_cb is a CheckBox
        Set Size to 10 50
        Set Location to 157 225
        Set Label to "Change Defaults"
        Set psToolTip to "You REALLY have to know what you're doing if you want to change the defaults! Leave them as is if you are not 100% sure."

        Procedure OnChange
            Boolean bChecked

            Get Checked_State to bChecked
            Set Enabled_State of oTableName_fm  to (bChecked = True)
            Set Enabled_State of oColumnName_fm to (bChecked = True)
            Set Enabled_State of oDataType_cf   to (bChecked = True)
            Set Enabled_State of oLength_sf     to (bChecked = True)
            Set Enabled_State of oDecimals_sf   to (bChecked = True)
        End_Procedure

    End_Object

    Object oCreateTable_btn is a Button
        Set Size to 14 54
        Set Location to 155 309
        Set Label to "Create Table"
        Set FontWeight to fw_Bold
        Property String psToolTip1 "This will create a table & column for the Embedded database, to be used with the DataFlex Update Framework."
        Property String psToolTip2 "There is also a 'SQLUtilCreateDbVersionTable' function that can be used to create/move the Table at customer site to SQL."
        Set psToolTip to (psToolTip1(Self) + psToolTip2(Self))

        Procedure OnClick
            String sTableName sColumnName sInfoTxt1 sInfoTxt2 sDataType sFileList sDataPath
            Integer iLength iDecimals iDataType iRetval iMin iMax
            Boolean bOK
            Handle hTable

            Get Value of oFileList_fm  to sFileList
            Get Value of oTableName_fm to sTableName
            Move (Trim(sTableName))    to sTableName
            If (sTableName = "") Begin
                Send Info_Box "You first need to enter a table name."
                Procedure_Return
            End

            Get psDataPath of (phoWorkspace(ghoApplication)) to sDataPath
            Get vFolderFormat sDataPath to sDataPath
            Set psDriverID                      of ghoDbUpdateFunctionLibrary to DATAFLEX_ID
            Get UtilTableNameToHandle of ghoDbUpdateFunctionLibrary sTableName to iRetval
            If (iRetval <> 0) Begin
                Send Info_Box ("Sorry, a table named: '" + sTableName + "' already exists in" * sFileList + "!")
                Procedure_Return
            End

            Get Value of oColumnName_fm      to sColumnName
            Move (Trim(sColumnName))         to sColumnName
            If (sColumnName = "") Begin
                Send Info_Box "You need to enter a column name."
                Procedure_Return
            End

            Get Value        of oDataType_cf to sDataType
            Get SelectedType of oDataType_cf to iDataType
            Get Value        of oLength_sf   to iLength
            If (iLength < 1) Begin
                Send Info_Box "You need to enter a proper length for the column"
                Procedure_Return
            End
            Get Value of oDecimals_sf to iDecimals

            Get Value of oTableNo_sf  to hTable
            Get Maximum_Position of oTableNo_sf to iMax
            Get Minimum_Position of oTableNo_sf to iMin
            If (hTable < iMin or hTable > iMax) Begin
                Send Info_Box "The selected Filelist number must be in the range: 1-4095"
                Procedure_Return
            End
            Get _UtilTableNumberIsInUse of ghoDbUpdateFunctionLibrary hTable to bOK
            If (bOK = True) Begin
                Send Info_Box "The selected Filelist number exists and cannot be used to create a new table!"
                Procedure_Return
            End

            // Reserved filelist numbers 48-50, 250-300
            Move (hTable <> 48 and hTable <> 49 and hTable <> 50 and (hTable < 250 or hTable > 300)) to bOK
            If (bOK = False) Begin
                Send Info_Box "The selected Filelist number is in the range of reserved filelist numbers; 48-50 and 250-300"
                Procedure_Return
            End

            Get psToolTip1 to sInfoTxt1
            Get psToolTip2 to sInfoTxt2
            Get YesNo_Box (sInfoTxt1 + "\n\n" + sInfoTxt2 + "\n\nContinue?") to iRetval
            If (iRetval <> MBR_Yes) Begin
                Procedure_Return
            End

            Send Cursor_Wait of Cursor_Control

            Get ApiTableCreate of ghoDbUpdateFunctionLibrary hTable sTableName sTableName sTableName False True True to bOk
            If (bOk = False) Begin
                Send Info_Box "Sorry, it didn't work to create the table."
                Procedure_Return
            End

            Get ApiTableChangeAttribute of ghoDbUpdateFunctionLibrary hTable DF_FILE_IS_SYSTEM_FILE True to bOK
            Get ApiColumnAdd            of ghoDbUpdateFunctionLibrary hTable sColumnName iDataType iLength iDecimals to bOk
            If (bOK = True) Begin
                Move ("The table was created and Column '" + sColumnName + "'" * sDataType * String(iLength) + ", was successfully added to '" + sTableName + "'" * "(at filelist slot:" * String(hTable) + ")") to sInfoTxt1
            End
            Else Begin
                Move ("The column could NOT be added. Either column" * sColumnName * "already exists or the Table name is incorrect?") to sInfoTxt1
            End
            Send Cursor_Ready of Cursor_Control
            Send Info_Box sInfoTxt1
        End_Procedure

    End_Object

    Procedure OnFileDropped String sFilename Boolean bLast
        String sFilelistName

        Forward Send OnFileDropped sFilename bLast

        Move (Trim(sFilename)) to sFilename
        Get ExtractFileName sFilename   to sFilelistName
        Move (Uppercase(sFilelistName)) to sFilelistName
        If (bLast = True and sFilelistName = "FILELIST.CFG") Begin
            Set Value     of oFileList_fm to sFilename
            Send OnChange of oFileList_fm
        End
    End_Procedure

    // Put a status bar at the bottom of the panel, which makes
    // status_help work and puts a gripper in the lower right corner.
    Procedure End_Construct_Object
        Integer iStyle iSize iOffset

        Forward Send End_Construct_Object

        Get Border_Style to iStyle
        Move 8 to iOffset
        If (iStyle = Border_Thick) Begin
            Object oDialogCommandbar is a cCJCommandBarSystem
                Object oStatusBar is a cCJStatusBar
                    Set phoDialogCommandbar to Self
                    Object oStatusIdle is a cCJStatusBarPane
                        Set piId to sbpIDIdlePane
                        Set pbStyleStretch to True
                    End_Object
                End_Object
            End_Object
            Get Size to iSize
            Set Size to (Hi(iSize) + iOffset) (Low(iSize))
            Set piMinSize to (Hi(iSize) + iOffset) (Low(iSize))
        End

    End_Procedure

    Procedure Popup
        Set Statusbar_Id to (phoDialogCommandbar(Self))
        Forward Send Popup
    End_Procedure

    Procedure Page Integer iPageObject
        Integer hWnd
        Forward Send Page iPageObject

        Get Window_Handle to hWnd

        If ((ghoSkinFramework<>0) and (hWnd<>0)) Begin
            Send ComRemoveWindow to ghoSkinFramework hWnd
            Send ComApplyWindow  to ghoSkinFramework hWnd
        End
    End_Procedure

    Object oAddToStudio_btn is a Button
        Set Size to 14 52
        Set Location to 179 82
        Set Label to "Add to Studio"
        Set peAnchors to anNone
        Set psToolTip to "Dialog that adds this program to the Studio's 'Tools' menu."

        Procedure OnClick
            Send Popup of oAddToStudio_dg
        End_Procedure

    End_Object

    Use StdAbout.pkg
    Procedure Activate_About
        Send DoAbout "" "" ("Copyright 2016-2023" * psCompany(ghoApplication)) "Author: Nils Svedmyr" "AutoCreateTable.bmp" "E-mail: mailto:support@rdctools.com" "Web-site: www.rdctools.com" ("This tool was created with DataFlex" * String(C_DFVersion) * "from Data Access Worldwide. Please visit http://www.dataaccess.com for a free personal copy of DataFlex.")
    End_Procedure

    Object oAbout_btn is a Button
        Set Location to 179 27
        Set Label to "About"
        Set peAnchors to anNone

        Procedure OnClick
            Send Activate_About
        End_Procedure

    End_Object

    Procedure ShowProgramHelp
        Send DoDisplayKeyword of ghoHtmlHelp "CreateDbVersionTable Tool"
    End_Procedure

    On_Key Key_F1 Send ShowProgramHelp
End_Object

Send Activate of oCreateDbVersionTable_pnl
Start_UI
