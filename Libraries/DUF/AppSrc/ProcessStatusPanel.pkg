// ProcessStatusPanel.pkg

Use cProcessStatusPanel.pkg
Use cProgressBar.pkg

#IFNDEF ghoStatusPanel
    Global_Variable Handle ghoStatusPanel // will contain the ID of the global StatusPanel object
#ENDIF

#IFNDEF ghoProgressBar
    Global_Variable Handle ghoProgressBar // will contain the ID of the embedded progress bar.
// this is the main progress bar unless ghoProgressBarOverall is used in which case ghoProgressBarOverall becomes the main one.
#ENDIF

#IFNDEF ghoProgressBarOverall
    Global_Variable Handle ghoProgressBarOverall // will contain the ID of the embedded progress bar with overall results
#ENDIF

Object Status_Panel is a cProcessStatusPanel
    Property Boolean Cancel_Button_Visible_State True

    Move Self to ghoStatusPanel         // this can be used throughout your application to access this object

    Set Size to 110 166
    Set Sysmenu_Icon to False

    // When the status panel is continuously called it gets smaller and smaller each time it is invoked.
    // This only happens when using the skin framework and this totally fixes the problem.
    Procedure Activate
        Integer iSizeBefore iSizeAfter
        Get GuiSize to iSizeBefore
        Forward Send Activate
        Get Size to iSizeAfter
        If (iSizeAfter < iSizeBefore) Begin
            Set GuiSize to (Hi(iSizeBefore)) (Low(iSizeBefore))
        End
        Send Adjust_Logicals
    End_Procedure

    Object oTitleTxt is a TextBox
        Set location to 10 10
        Set Auto_Size_State to False
        Set size to 20 150
        Set Justification_Mode to JMode_Center
    End_Object

    Object oMessageTxt is a TextBox
        Set location to 25 10
        Set Auto_Size_State to False
        Set size to 20 150
    End_Object

    Object oActionTxt is a TextBox
        Set location to 45 10
    End_Object

    Object oStopButton is a Button
        Set Location to 90 58
        Set Label to C_$Cancel

        Procedure OnClick
            Send Close_panel
        End_Procedure

    End_Object

    Object oProgressBar is a cProgressBar
        Set Size to 10 150
        Set Location to 60 8
        Set pbVisible to False // default
        Move Self to ghoProgressBar // this can be used throughout your application to access the progress bar
    End_Object

    Procedure Set Progress_Bar_Visible_State Boolean bVisible
        Set pbVisible of ghoProgressBar to bVisible
    End_Procedure

    Function Progress_Bar_Visible_State Returns Boolean
        Boolean bVisible
        Get pbVisible of ghoProgressBar to bVisible
        Function_Return (bVisible)
    End_Function

    Object oProgressBarOverall is a cProgressBar
        Set Size to 10 150
        Set Location to 75 8
        Set pbVisible to False // default
        Move Self to ghoProgressBarOverall // this can be used throughout your application to access the progress bar
    End_Object

    Procedure Set Progress_Bar_Overall_Visible_State Boolean bVisible
        Set pbVisible of ghoProgressBarOverall to bVisible
    End_Procedure

    Function Progress_Bar_Overall_Visible_State Returns Boolean
        Boolean bVisible
        Get pbVisible of ghoProgressBarOverall to bVisible
        Function_Return (bVisible)
    End_Function

    // These messages bind the standard cProcessStatusPanel interface to the actual
    // objects defined within this instance of the status panel.

    // note: all of the messages that change text should be forwarded
    // as the forwarded messages allows the panel to paint when in a tight loop

    Procedure Set Message_Text String sText
        Set Label of oMessageTxt to sText
        Forward Set Message_Text to sText
    End_Procedure

    Function Message_Text Returns String
        Function_Return (Label(oMessageTxt))
    End_Function

    Procedure Set Action_Text String sText
        Set Label of oActionTxt to sText
        Forward Set Action_Text to sText
    End_Procedure

    Function Action_Text Returns String
        Function_Return (Label(oActionTxt))
    End_Function

    Procedure Set Button_Text String sText
        Set Label of oStopButton to sText
        Forward Set Button_Text to sText
    End_Procedure

    Function Button_Text Returns String
        Function_Return (Label(oStopButton))
    End_Function

    Procedure Set Title_Text String sText
        Set Label of oTitleTxt to sText
        Forward Set Title_Text to sText
    End_Procedure

    Function Title_Text Returns String
        Function_Return (Label(oTitleTxt))
    End_Function

    // gets called when status panel is activated passing whether a button
    // should appear
    Procedure EnableCancelButton Boolean bEnable
        Boolean bVisible
        Get Cancel_Button_Visible_State to bVisible
        If (bEnable = False) Begin
            Set Visible_State of oStopButton to bVisible
        End
        Set Enabled_State of oStopButton to bEnable
    End_Procedure

    Procedure Reset_StatusPanel
        Set Allow_Cancel_State of ghoStatusPanel to True
        Set Cancel_Button_Visible_State of ghoStatusPanel to True
        Set Progress_Bar_Visible_State of ghoProgressBar to False
        Set Progress_Bar_Overall_Visible_State of ghoProgressBarOverall to False
    End_Procedure

End_Object
