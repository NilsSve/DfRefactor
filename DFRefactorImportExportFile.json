{
   "iNoOfFunctions": 2,
   "Data": [
     {
       "ID": "1",
       "Function_Name": "ChangeCurrent_ObjectToSelf",
       "Function_Description": "Current_Object -> Self",
       "Function_Help": "Replaces the legacy keyword 'Current_Object' with 'Self' (Function: ChangeCurrent_ObjectToSelf) (Function: ChangeCurrent2_ObjectToSelf)",
       "Function_Summary": "Replaced Current_Object with Self",
       "Selected": true,
       "Type": 1,
       "Count": 0,
       "bHasParameter": false,
       "Parameter": "",
       "ParameterValidation": "",
       "ParameterHelp": ""
     },
     {
       "ID": "4",
       "Function_Name": "ChangeFoundAndFindErrIndicators",
       "Function_Description": "[Found][FindErr] -> (Found) (Not(Found))",
       "Function_Help": "Changes legacy square brackets found indicators; [Found] {FindErr] to expressions; (Found) or (Not(Found)) (Function: ChangeFoundAndFindErrIndicators)",
       "Function_Summary": "Changed [Found]\/[FindErr] to (Found)\/(Not(Found))",
       "Selected": true,
       "Type": 1,
       "Count": 0,
       "bHasParameter": false,
       "Parameter": "",
       "ParameterValidation": "",
       "ParameterHelp": ""
     }
   ],
   "Code": [
     {
       "sFunctionName": "ChangeCurrent_ObjectToSelf",
       "iSourceLines": 31,
       "CodeArray": [
         "    \/\/ *** LINE-BY-LINE FUNCTION *** ",
         "    \/\/ Replaces \"Current_Object\" to \"Self\"   ",
         "    Function ChangeCurrent_ObjectToSelf String ByRef sLine String sParameter Returns Boolean",
         "        String sText sStart sStop",
         "        Boolean bFound",
         "        Integer iPos",
         "        ",
         "        Move sLine to sText",
         "        Get IsCommentLineOrBlank sText to bFound",
         "        If (bFound = True) Begin",
         "            Function_Return False",
         "        End",
         "        Move (Lowercase(sText)) to sText",
         "        Move (Pos(lowercase(CS_Current_Object), sText)) to iPos",
         "        If (iPos = 0) Begin",
         "            Function_Return False",
         "        End                      ",
         "        Move (Left(sLine, (iPos -1))) to sStart",
         "        Move (Mid(sLine, Length(sLine), (iPos + Length(CS_Current_Object)))) to sStop",
         "        Move (sStart + CS_Self + String(sStop)) to sLine ",
         "        ",
         "        \/\/ Note! Recursively calls the same function if there are more than one \"current_object\" in the code line.",
         "        Move (Lowercase(sLine)) to sText",
         "        Move (Pos(lowercase(CS_Current_Object), sText)) to iPos",
         "        If (iPos <> 0) Begin                             ",
         "            Move sLine to sText",
         "            Get ChangeCurrent_ObjectToSelf (&sLine) to sText",
         "        End                      ",
         "        ",
         "        Function_Return True    ",
         "    End_Function"
       ]
     },
     {
       "sFunctionName": "ChangeFoundAndFindErrIndicators",
       "iSourceLines": 60,
       "CodeArray": [
         "    \/\/ *** LINE-BY-LINE FUNCTION *** ",
         "    \/\/ Changes [Found] Reread (and other commnds _except Loop, While, [Select], and If & Begin",
         "    \/\/     to: If (Found) command",
         "    Function ChangeFoundAndFindErrIndicators String ByRef sLine String sParameter Returns Boolean",
         "        String sText sIndicator sCommand sEndString",
         "        Boolean bChanged bFound",
         "        Integer iPos ",
         "        tCodeComponents LineComponents ",
         "        tBooleanIndicator BooleanIndicator",
         "        ",
         "        Move sLine to sText",
         "        Get IsFoundOrFindErrIndicator sText to bFound",
         "        If (bFound = False) Begin",
         "            Function_Return False",
         "        End",
         "        ",
         "        Get Tokenizer sLine to LineComponents",
         "        Get _ExtractIndicatorContent LineComponents.sCode to BooleanIndicator",
         "        Move (Lowercase(BooleanIndicator.sExpression) contains Lowercase(CS_Found)) to bFound",
         "        \/\/ [Finderr]",
         "        If (bFound = False) Begin",
         "            Move (\"(\" + String(CS_Found) * \"=\" * String(CS_False) + \")\") to BooleanIndicator.sExpression",
         "        End",
         "        ",
         "        Move (Pos(\" \", LineComponents.sCode)) to iPos",
         "        Move (Mid(LineComponents.sCode, Length(LineComponents.sCode), (iPos + 1))) to LineComponents.sCode",
         "        \/\/ Must check that it isn't a \"Repeat\" or \"While\" or \"Loop\" command ",
         "   ",
         "        Move (Lowercase(BooleanIndicator.sCode) = Lowercase(CS_Repeat)) to bFound",
         "        If (bFound = True) Begin",
         "            Function_Return False",
         "        End",
         "        Move (Lowercase(BooleanIndicator.sCode) = Lowercase(CS_Loop)) to bFound",
         "        If (bFound = True) Begin",
         "            Function_Return False",
         "        End",
         "        Move (Lowercase(BooleanIndicator.sCode) = Lowercase(CS_While)) to bFound",
         "        If (bFound = True) Begin",
         "            Function_Return False",
         "        End",
         "        Move (Lowercase(BooleanIndicator.sCode) = Lowercase(CS_Select)) to bFound",
         "        If (bFound = True) Begin",
         "            Function_Return False",
         "        End",
         "        ",
         "        Move \"\" to sEndString",
         "        If (LineComponents.sOfStatement <> \"\") Begin",
         "            Move (\" \" + String(LineComponents.sOfStatement)) to sEndString",
         "        End",
         "        If (LineComponents.sToStatement <> \"\") Begin",
         "            Move (sEndString * String(LineComponents.sToStatement)) to sEndString",
         "        End",
         "        If (LineComponents.sRightComment <> \"\") Begin",
         "            Move (sEndString * LineComponents.sRightComment) to sEndString",
         "        End ",
         "        ",
         "        Move (String(BooleanIndicator.sExpression) * String(BooleanIndicator.sCode)) to LineComponents.sCode",
         "        Move (LineComponents.sIndentation + String(CS_If) * String(LineComponents.sCode) * String(sEndString)) to sLine",
         "        Function_Return True",
         "    End_Function "
       ]
     }
   ],
   "Unit": [
     {
       "sFunctionName": "ChangeCurrent_ObjectToSelf",
       "iSourceLines": 0,
       "UnitArray": [
       ]
     },
     {
       "sFunctionName": "ChangeFoundAndFindErrIndicators",
       "iSourceLines": 0,
       "UnitArray": [
       ]
     }
   ]
 }