// DataFlex COM proxy classes generated from C:\Program Files (x86)\DataFlex 19.1\Bin\vdfdbg.dll
Use FlexCom20.pkg


// WindowType property - Tells what kind of variables will be displayed in the window
Define OLEdbgVariableWindows for Integer
    Define OLEDBGVARIABLEWINDOW_LOCAL for 0
    Define OLEDBGVARIABLEWINDOW_GLOBAL for 1

// CLSID: {88D83000-A2A8-426B-A13E-100B0104CE0D}
// IDebuggerEngine Interface
Class cComIDebuggerEngine is a Mixin

    // Starts debugging the specified program
    Procedure ComStartProgram String llcmdLine Boolean llnoDebugHeap Variant llwebApp Variant llurl
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 4
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llcmdLine
        Send DefineParam to hDispatchDriver OLE_VT_BOOL llnoDebugHeap
        Send DefineParam to hDispatchDriver OLE_VT_VARIANT llwebApp
        Send DefineParam to hDispatchDriver OLE_VT_VARIANT llurl
        Send InvokeComMethod to hDispatchDriver 1 OLE_VT_VOID
    End_Procedure

    // Stops current debugging session
    Procedure ComStopProgram
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 2 OLE_VT_VOID
    End_Procedure

    // Resumes execution of the debuggee process
    Procedure ComContinue
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 3 OLE_VT_VOID
    End_Procedure

    // Steps into the next line of code
    Procedure ComStepInto
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 4 OLE_VT_VOID
    End_Procedure

    // Steps over the next line of code
    Procedure ComStepOver
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 5 OLE_VT_VOID
    End_Procedure

    // Steps out of the current function call
    Procedure ComStepOut
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 6 OLE_VT_VOID
    End_Procedure

    // Breaks execution
    Procedure ComPause
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 7 OLE_VT_VOID
    End_Procedure

    // Sets the specified breakpoint
    Function ComSetBreakPoint String llfile UInteger ByRef llline Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Send DefineParam to hDispatchDriver (OLE_VT_BYREF ior OLE_VT_UI4) llline
        Get InvokeComMethod of hDispatchDriver 8 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // Removes the specified breakpoint
    Function ComRemoveBreakPoint String llfile UInteger llline Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Send DefineParam to hDispatchDriver OLE_VT_UI4 llline
        Get InvokeComMethod of hDispatchDriver 9 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // Selects the active callstack entry
    Procedure ComSelectActiveQueueLevel Integer llqueueLevel
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_I4 llqueueLevel
        Send InvokeComMethod to hDispatchDriver 10 OLE_VT_VOID
    End_Procedure

    // Evaluates the specified expression
    Function ComEval String llexpr String ByRef llresult Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llexpr
        Send DefineParam to hDispatchDriver (OLE_VT_BYREF ior OLE_VT_BSTR) llresult
        Get InvokeComMethod of hDispatchDriver 11 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // Triggers event OnUpdateView
    Procedure ComUpdateViews
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 12 OLE_VT_VOID
    End_Procedure

    // Evaluates the specified expression asynchronously
    Procedure ComAsyncEval OLE_HANDLE llhWndListener Integer llexprID String llexpression
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 3
        Send DefineParam to hDispatchDriver OLE_VT_I4 llhWndListener
        Send DefineParam to hDispatchDriver OLE_VT_I4 llexprID
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llexpression
        Send InvokeComMethod to hDispatchDriver 13 OLE_VT_VOID
    End_Procedure

    // Resumes execution up to the specified line
    Procedure ComRunToLine String llfile UInteger llline
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Send DefineParam to hDispatchDriver OLE_VT_UI4 llline
        Send InvokeComMethod to hDispatchDriver 14 OLE_VT_VOID
    End_Procedure

    // Returns the source line from the specified command number
    Function ComGetSourceLineFromCommand Integer llcmd Integer ByRef llline Returns String
        Handle hDispatchDriver
        String retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_I4 llcmd
        Send DefineParam to hDispatchDriver (OLE_VT_BYREF ior OLE_VT_I4) llline
        Get InvokeComMethod of hDispatchDriver 15 OLE_VT_BSTR to retVal
        Function_Return retVal
    End_Function

    // Returns array of all messages in program
    Function ComGetAllMessages Returns String[]
        Handle hDispatchDriver
        String[] retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 16 (OLE_VT_ARRAY ior OLE_VT_BSTR) to retVal
        Function_Return retVal
    End_Function

    // Returns whether the specified source file is part of the debuggee program
    Function ComIsValidSourceFile String llfile Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Get InvokeComMethod of hDispatchDriver 17 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // Returns the instruction address of the specified source file and line number
    Function ComGetCommandFromSourceLine String llfile UInteger llline Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Send DefineParam to hDispatchDriver OLE_VT_UI4 llline
        Get InvokeComMethod of hDispatchDriver 18 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // Requests the runtime to reallocate the specified buffer
    Function ComReallocProgramBuffer Char ByRef llpData Integer llsize Returns Char
        Handle hDispatchDriver
        Char retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver (OLE_VT_BYREF ior OLE_VT_I1) llpData
        Send DefineParam to hDispatchDriver OLE_VT_I4 llsize
        Get InvokeComMethod of hDispatchDriver 19 (OLE_VT_BYREF ior OLE_VT_I1) to retVal
        Function_Return retVal
    End_Function

    // Returns a list of attachable processes
    Function ComGetAttachableProcesses Returns UInteger[]
        Handle hDispatchDriver
        UInteger[] retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 20 (OLE_VT_ARRAY ior OLE_VT_UI4) to retVal
        Function_Return retVal
    End_Function

    // Attaches and starts debugging the specified process
    Procedure ComAttachProcess UInteger llpid
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_UI4 llpid
        Send InvokeComMethod to hDispatchDriver 21 OLE_VT_VOID
    End_Procedure

    // Sets the specified conditional breakpoint expression
    Function ComSetBreakPointCondition String llfile UInteger ByRef llline String llexpr Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 3
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Send DefineParam to hDispatchDriver (OLE_VT_BYREF ior OLE_VT_UI4) llline
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llexpr
        Get InvokeComMethod of hDispatchDriver 22 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // Attempts to adjust the current instruction pointer to the specified file and line
    Function ComSetNextInstruction String llfile UInteger llline Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llfile
        Send DefineParam to hDispatchDriver OLE_VT_UI4 llline
        Get InvokeComMethod of hDispatchDriver 23 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function
End_Class

// CLSID: {67B9146F-8928-4CDD-9032-7CCEF01D7330}
// _IDebuggerEngineEvents Interface
Class cCom_IDebuggerEngineEvents is a Mixin

    // Occurs after program has been successfully initialized
    { MethodType=Event }
    Procedure OnComProgramInit
    End_Procedure

    // Occurs after the program exits
    { MethodType=Event }
    Procedure OnComProgramExit
    End_Procedure

    // Occurs if there is an error starting the program
    { MethodType=Event }
    Procedure OnComProgramStartupError String llerrorMessage
    End_Procedure

    // Occurs if there is an error initializing the program
    { MethodType=Event }
    Procedure OnComProgramInitError String llerrorMessage
    End_Procedure

    // Occurs when the program execution is paused
    { MethodType=Event }
    Procedure OnComProgramPaused String llfile UInteger llline Boolean lllimitedBreakMode
    End_Procedure

    // Occurs when the program execution resumes
    { MethodType=Event }
    Procedure OnComProgramContinue
    End_Procedure

    // Occurs after a change requiring views to be refreshed
    { MethodType=Event }
    Procedure OnComUpdateView String llfile UInteger llline
    End_Procedure

    // Occurs when a new message is executed
    { MethodType=Event }
    Procedure OnComNewMessage Integer llbSteppin
    End_Procedure

    // Occurs if an unhandled program exception is detected
    { MethodType=Event }
    Procedure OnComUnhandledProgramException String lldescription
    End_Procedure

    // Occurs if there is an incoming request for another web app session. You can abandon the current session and switch to the new session or deny the new session and continue debugging the current session
    { MethodType=Event }
    Procedure OnComAcceptWebAppSession Boolean ByRef llacceptNewSession
    End_Procedure

    // Occurs if there is a fatal web app error
    { MethodType=Event }
    Procedure OnComWebAppError String lldescription
    End_Procedure

    // Occurs when a new webapp event log entry is added
    { MethodType=Event }
    Procedure OnComWebAppLog Integer lleventId String lltext
    End_Procedure

    // Occurs if there was an error evaluating a conditional breakpoint
    { MethodType=Event }
    Procedure OnComBreakPointError String lltext
    End_Procedure

    { Visibility=Private }
    Procedure RegisterComEvents
        Send RegisterComEvent 1 msg_OnComProgramInit
        Send RegisterComEvent 2 msg_OnComProgramExit
        Send RegisterComEvent 3 msg_OnComProgramStartupError
        Send RegisterComEvent 4 msg_OnComProgramInitError
        Send RegisterComEvent 5 msg_OnComProgramPaused
        Send RegisterComEvent 6 msg_OnComProgramContinue
        Send RegisterComEvent 7 msg_OnComUpdateView
        Send RegisterComEvent 8 msg_OnComNewMessage
        Send RegisterComEvent 9 msg_OnComUnhandledProgramException
        Send RegisterComEvent 10 msg_OnComAcceptWebAppSession
        Send RegisterComEvent 11 msg_OnComWebAppError
        Send RegisterComEvent 12 msg_OnComWebAppLog
        Send RegisterComEvent 13 msg_OnComBreakPointError
    End_Procedure
End_Class

// CoClass
// ProgID: VDFDebugger.DebuggerEngine.19.1
// CLSID: {7A3BE09B-46E4-4D34-9450-491696976C76}
// DebuggerEngine Class
Class cComCDebuggerEngine is a cComAutomationObject
    Import_Class_Protocol cComIDebuggerEngine
    Import_Class_Protocol cCom_IDebuggerEngineEvents

    Procedure Construct_Object
        Forward Send Construct_Object
        Set psProgID to "{7A3BE09B-46E4-4D34-9450-491696976C76}"
        Set psEventId to "{67B9146F-8928-4CDD-9032-7CCEF01D7330}"
        Set peAutoCreate to acNoAutoCreate
    End_Procedure
End_Class

// CLSID: {A40CFC20-ABF7-420B-BFE5-330C81983BC3}
// ICallStack Interface
Class cComICallStack is a Mixin

    // property MessageColumnWidth
    { MethodType=Property DesignTime=False }
    Function ComMessageColumnWidth Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 1 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property MessageColumnWidth
    { MethodType=Property DesignTime=False }
    Procedure Set ComMessageColumnWidth Integer value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Set ComProperty of hDispatchDriver 1 OLE_VT_I4 to value
    End_Procedure

    // property ObjectColumnWidth
    { MethodType=Property DesignTime=False }
    Function ComObjectColumnWidth Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 2 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property ObjectColumnWidth
    { MethodType=Property DesignTime=False }
    Procedure Set ComObjectColumnWidth Integer value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Set ComProperty of hDispatchDriver 2 OLE_VT_I4 to value
    End_Procedure
End_Class

// CLSID: {AFBE68CB-74F4-4FDA-8EC0-A80075A095C2}
// _ICallStackEvents Interface
Class cCom_ICallStackEvents is a Mixin

    { Visibility=Private }
    Procedure RegisterComEvents
    End_Procedure
End_Class

// CoClass
// ProgID: VDFDebugger.CallStack.19.1
// CLSID: {003AA2E5-C76C-40F7-8741-3B705E57051F}
// CallStack Class
{ CLSID="{003AA2E5-C76C-40F7-8741-3B705E57051F}" }
Class cComCCallStack is a cComActiveXControl
    Import_Class_Protocol cComICallStack
    Import_Class_Protocol cCom_ICallStackEvents

    Procedure Construct_Object
        Forward Send Construct_Object
        Set psProgID to "{003AA2E5-C76C-40F7-8741-3B705E57051F}"
        Set psEventId to "{AFBE68CB-74F4-4FDA-8EC0-A80075A095C2}"
        Set peAutoCreate to acDeferredAutoCreate
    End_Procedure
End_Class

// CLSID: {690D93AE-55AF-4371-9011-63AFE9712D14}
// IMessageTrace Interface
Class cComIMessageTrace is a Mixin

    // property bTraceOn - controles if tracing is turned on or off
    { MethodType=Property DesignTime=False }
    Function ComBTraceOn Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 1 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property bTraceOn - controles if tracing is turned on or off
    { MethodType=Property DesignTime=False }
    Procedure Set ComBTraceOn Integer value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Set ComProperty of hDispatchDriver 1 OLE_VT_I4 to value
    End_Procedure

    // method LoadFilters - provide array of message names that are supposed to be filtered
    Procedure ComLoadFilters String[] llsaFilters
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver (OLE_VT_ARRAY ior OLE_VT_BSTR) llsaFilters
        Send InvokeComMethod to hDispatchDriver 2 OLE_VT_VOID
    End_Procedure

    // method ClearFilters - dont apply any filters
    Procedure ComClearFilters
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 3 OLE_VT_VOID
    End_Procedure

    // property sLogFileName - name of the file where traced messages will be stored
    { MethodType=Property DesignTime=False }
    Function ComSLogFileName Returns String
        Handle hDispatchDriver
        String retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 4 OLE_VT_BSTR to retVal
        Function_Return retVal
    End_Function

    // property sLogFileName - name of the file where traced messages will be stored
    { MethodType=Property DesignTime=False }
    Procedure Set ComSLogFileName String value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Set ComProperty of hDispatchDriver 4 OLE_VT_BSTR to value
    End_Procedure

    // method ClearTrace - clears tree. It works only when tracing is currently off
    Procedure ComClearTrace
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 7 OLE_VT_VOID
    End_Procedure

    // method AddFilter - add one message to filter array
    Procedure ComAddFilter String llsFilter
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llsFilter
        Send InvokeComMethod to hDispatchDriver 8 OLE_VT_VOID
    End_Procedure

    // method SaveTracer - Saves content of a tree. Parameter controles if children of unexpanded nodes should be processed too
    Procedure ComSaveTracer Integer llbAsIs
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_I4 llbAsIs
        Send InvokeComMethod to hDispatchDriver 9 OLE_VT_VOID
    End_Procedure
End_Class

// CLSID: {49D5E89A-AC2B-4F25-A775-80A8E7409BA0}
// _IMessageTraceEvents Interface
Class cCom_IMessageTraceEvents is a Mixin

    // method OnMessageClicked - fired when user clicked node in a message trace tree
    { MethodType=Event }
    Procedure OnComMessageClicked UInteger llcommandNo
    End_Procedure

    // method OnAddMsg2Filter  - when user selected context menu for the add 2 filter message option
    { MethodType=Event }
    Procedure OnComAddMsg2Filter String llsMessageName
    End_Procedure

    // method OnFilterOptions - fired when user wants to bring dialog for defining message filters
    { MethodType=Event }
    Procedure OnComFilterOptions
    End_Procedure

    // method OnContextMenu - fired when user right clicked to bring up context menu
    { MethodType=Event }
    Procedure OnComContextMenu String llsMessageName UInteger llpoint
    End_Procedure

    { Visibility=Private }
    Procedure RegisterComEvents
        Send RegisterComEvent 1 msg_OnComMessageClicked
        Send RegisterComEvent 2 msg_OnComAddMsg2Filter
        Send RegisterComEvent 3 msg_OnComFilterOptions
        Send RegisterComEvent 4 msg_OnComContextMenu
    End_Procedure
End_Class

// CoClass
// ProgID: vdfdbg.MessageTrace.19.1
// CLSID: {DBAF5091-EF4D-487F-8A5B-E46C82B66E95}
// MessageTrace Class
{ CLSID="{DBAF5091-EF4D-487F-8A5B-E46C82B66E95}" }
Class cComCMessageTrace is a cComActiveXControl
    Import_Class_Protocol cComIMessageTrace
    Import_Class_Protocol cCom_IMessageTraceEvents

    Procedure Construct_Object
        Forward Send Construct_Object
        Set psProgID to "{DBAF5091-EF4D-487F-8A5B-E46C82B66E95}"
        Set psEventId to "{49D5E89A-AC2B-4F25-A775-80A8E7409BA0}"
        Set peAutoCreate to acDeferredAutoCreate
    End_Procedure
End_Class

// CLSID: {5C5D8C33-F831-4F96-83FF-1EECA621439E}
// ITablesWindow Interface
Class cComITablesWindow is a Mixin

    // property ColumnWidth
    { MethodType=Property DesignTime=False }
    Function ComColumnWidth Integer lllColumnIndex Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_I4 lllColumnIndex
        Get InvokeComMethod of hDispatchDriver 1 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property ColumnWidth
    { MethodType=Property DesignTime=False }
    Procedure Set ComColumnWidth Integer lllColumnIndex Integer value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_I4 lllColumnIndex
        Set ComProperty of hDispatchDriver 1 OLE_VT_I4 to value
    End_Procedure

    // method CopyDataValueToClipboard
    Procedure ComCopyDataValueToClipboard
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 2 OLE_VT_VOID
    End_Procedure
End_Class

// CLSID: {597EDE36-FEE8-4021-B4E7-086957C44F0B}
// _ITablesWindowEvents Interface
Class cCom_ITablesWindowEvents is a Mixin

    // method OnCmdAddWatch - fired when user selects add to watch from popup menu
    { MethodType=Event }
    Procedure OnComCmdAddWatch String llsExpression
    End_Procedure

    // method OnContextMenu - fired when user right clicked to bring up context menu
    { MethodType=Event }
    Procedure OnComContextMenu String llsMessageName UInteger llpoint
    End_Procedure

    { Visibility=Private }
    Procedure RegisterComEvents
        Send RegisterComEvent 1 msg_OnComCmdAddWatch
        Send RegisterComEvent 2 msg_OnComContextMenu
    End_Procedure
End_Class

// CoClass
// ProgID: vdfdbg.TablesWindow.19.1
// CLSID: {B2B3B951-FA39-4409-9D90-0F235DF692F8}
// TablesWindow Class
{ CLSID="{B2B3B951-FA39-4409-9D90-0F235DF692F8}" }
Class cComCTablesWindow is a cComActiveXControl
    Import_Class_Protocol cComITablesWindow
    Import_Class_Protocol cCom_ITablesWindowEvents

    Procedure Construct_Object
        Forward Send Construct_Object
        Set psProgID to "{B2B3B951-FA39-4409-9D90-0F235DF692F8}"
        Set psEventId to "{597EDE36-FEE8-4021-B4E7-086957C44F0B}"
        Set peAutoCreate to acDeferredAutoCreate
    End_Procedure
End_Class

// CLSID: {0B86526D-58A2-4FF2-A611-B26A6C26DF60}
// IVariablesWindow Interface
Class cComIVariablesWindow is a Mixin

    // property WindowType (set 0 for local variables, and 1 for globals)
    { MethodType=Property DesignTime=False }
    Function ComWindowType Returns OLEdbgVariableWindows
        Handle hDispatchDriver
        OLEdbgVariableWindows retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 1 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property WindowType (set 0 for local variables, and 1 for globals)
    { MethodType=Property DesignTime=False }
    Procedure Set ComWindowType OLEdbgVariableWindows value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Set ComProperty of hDispatchDriver 1 OLE_VT_I4 to value
    End_Procedure

    // property ColumnWidth
    { MethodType=Property DesignTime=False }
    Function ComColumnWidth Integer lllColumnIndex Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_I4 lllColumnIndex
        Get InvokeComMethod of hDispatchDriver 2 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property ColumnWidth
    { MethodType=Property DesignTime=False }
    Procedure Set ComColumnWidth Integer lllColumnIndex Integer value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_I4 lllColumnIndex
        Set ComProperty of hDispatchDriver 2 OLE_VT_I4 to value
    End_Procedure

    // method ToggleSelectionViewAsObject
    Procedure ComToggleSelectionViewAsObject
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 3 OLE_VT_VOID
    End_Procedure

    // method CanToggleSelectionViewAsObject
    Function ComCanToggleSelectionViewAsObject Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 4 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // method IsSelectionViewAsObject
    Function ComIsSelectionViewAsObject Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 5 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // method CopyDataValueToClipboard
    Procedure ComCopyDataValueToClipboard
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 6 OLE_VT_VOID
    End_Procedure

    // method CanCopyDataValue
    Function ComCanCopyDataValue Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 7 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function
End_Class

// CLSID: {92FB2A2D-6F67-4CB2-855A-7E4AB60A3269}
// _IVariablesWindowEvents Interface
Class cCom_IVariablesWindowEvents is a Mixin

    // method OnCmdAddWatch - fired when user selects add to watch from popup menu
    { MethodType=Event }
    Procedure OnComCmdAddWatch String llsExpression
    End_Procedure

    // method OnContextMenu - fired when user right clicked to bring up context menu
    { MethodType=Event }
    Procedure OnComContextMenu String llsMessageName UInteger llpoint
    End_Procedure

    { Visibility=Private }
    Procedure RegisterComEvents
        Send RegisterComEvent 1 msg_OnComCmdAddWatch
        Send RegisterComEvent 2 msg_OnComContextMenu
    End_Procedure
End_Class

// CoClass
// ProgID: vdfdbg.VariablesWindow.19.1
// CLSID: {6245C464-0C89-4B88-8523-FDA685519CD2}
// VariablesWindow Class
{ CLSID="{6245C464-0C89-4B88-8523-FDA685519CD2}" }
Class cComCVariablesWindow is a cComActiveXControl
    Import_Class_Protocol cComIVariablesWindow
    Import_Class_Protocol cCom_IVariablesWindowEvents

    Procedure Construct_Object
        Forward Send Construct_Object
        Set psProgID to "{6245C464-0C89-4B88-8523-FDA685519CD2}"
        Set psEventId to "{92FB2A2D-6F67-4CB2-855A-7E4AB60A3269}"
        Set peAutoCreate to acDeferredAutoCreate
    End_Procedure
End_Class

// CLSID: {C6C1E957-7DE0-4B0F-9671-9323A586E574}
// IWatches Interface
Class cComIWatches is a Mixin

    // method LoadWatches - Loads expressions in the grid
    Procedure ComLoadWatches String[] llsaExpressions
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver (OLE_VT_ARRAY ior OLE_VT_BSTR) llsaExpressions
        Send InvokeComMethod to hDispatchDriver 1 OLE_VT_VOID
    End_Procedure

    // method GetWatches - Get Array of expressions currently displayed
    Function ComGetWatches Returns String[]
        Handle hDispatchDriver
        String[] retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 2 (OLE_VT_ARRAY ior OLE_VT_BSTR) to retVal
        Function_Return retVal
    End_Function

    // method ClearWatches - Remove all watches from window
    Procedure ComClearWatches
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 3 OLE_VT_VOID
    End_Procedure

    // method AddWatch
    Procedure ComAddWatch String llsWatch
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_BSTR llsWatch
        Send InvokeComMethod to hDispatchDriver 4 OLE_VT_VOID
    End_Procedure

    // property ColumnWidth
    { MethodType=Property DesignTime=False }
    Function ComColumnWidth Integer lllColumnIndex Returns Integer
        Handle hDispatchDriver
        Integer retVal
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 1
        Send DefineParam to hDispatchDriver OLE_VT_I4 lllColumnIndex
        Get InvokeComMethod of hDispatchDriver 5 OLE_VT_I4 to retVal
        Function_Return retVal
    End_Function

    // property ColumnWidth
    { MethodType=Property DesignTime=False }
    Procedure Set ComColumnWidth Integer lllColumnIndex Integer value
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send PrepareParams to hDispatchDriver 2
        Send DefineParam to hDispatchDriver OLE_VT_I4 lllColumnIndex
        Set ComProperty of hDispatchDriver 5 OLE_VT_I4 to value
    End_Procedure

    // method ToggleSelectionViewAsObject
    Procedure ComToggleSelectionViewAsObject
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 6 OLE_VT_VOID
    End_Procedure

    // method CanToggleSelectionViewAsObject
    Function ComCanToggleSelectionViewAsObject Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 7 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // method IsSelectionViewAsObject
    Function ComIsSelectionViewAsObject Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 8 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function

    // method CopyDataValueToClipboard
    Procedure ComCopyDataValueToClipboard
        Handle hDispatchDriver
        Get phDispatchDriver to hDispatchDriver
        Send InvokeComMethod to hDispatchDriver 9 OLE_VT_VOID
    End_Procedure

    // method CanCopyDataValue
    Function ComCanCopyDataValue Returns Boolean
        Handle hDispatchDriver
        Boolean retVal
        Get phDispatchDriver to hDispatchDriver
        Get InvokeComMethod of hDispatchDriver 10 OLE_VT_BOOL to retVal
        Function_Return retVal
    End_Function
End_Class

// CLSID: {13DBFB1B-3755-4563-8C40-B7DCBAC23024}
// _IWatchesEvents Interface
Class cCom_IWatchesEvents is a Mixin

    // method OnContextMenu - fired when user right clicked to bring up context menu
    { MethodType=Event }
    Procedure OnComContextMenu UInteger llpoint
    End_Procedure

    { Visibility=Private }
    Procedure RegisterComEvents
        Send RegisterComEvent 1 msg_OnComContextMenu
    End_Procedure
End_Class

// CoClass
// ProgID: vdfdbg.Watches.19.1
// CLSID: {13BB6CF5-A873-4363-B189-A2A6CA844C73}
// Watches Class
{ CLSID="{13BB6CF5-A873-4363-B189-A2A6CA844C73}" }
Class cComCWatches is a cComActiveXControl
    Import_Class_Protocol cComIWatches
    Import_Class_Protocol cCom_IWatchesEvents

    Procedure Construct_Object
        Forward Send Construct_Object
        Set psProgID to "{13BB6CF5-A873-4363-B189-A2A6CA844C73}"
        Set psEventId to "{13DBFB1B-3755-4563-8C40-B7DCBAC23024}"
        Set peAutoCreate to acDeferredAutoCreate
    End_Procedure
End_Class
